Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/overview/PhotoGridAdapter.kt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/overview/PhotoGridAdapter.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/overview/PhotoGridAdapter.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,23 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.android.marsrealestate.overview
-
-// TODO (06) Create PhotoGridAdapter that extends the RecyclerView ListAdapter with DiffCallback
-// TODO (07) Add unimplemented members for PhotoGridAdapter, create and implement DiffCallback companion class
-// TODO (08) Create and implement the MarsPropertyViewHolder inner class.
-// TODO (09) Override and implement onCreateViewHolder and onBindViewHolder
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/loading_img.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/loading_img.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/loading_img.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,39 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="72"
-    android:viewportWidth="72" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#cccccf"
-        android:pathData="M36.06,28.92L36.06,32.18"
-        android:strokeColor="#e7e7e7" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#c8c8cc"
-        android:pathData="M39.45,29.88L37.82,32.71"
-        android:strokeColor="#cacaca" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#bbbbbe"
-        android:pathData="M42.12,32.32L39.3,33.95"
-        android:strokeColor="#cdcdcd" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#b2b2b7"
-        android:pathData="M39.8,35.98L43.06,35.98"
-        android:strokeColor="#cbcbcb" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#d0d0d4"
-        android:pathData="M32.77,29.99L34.4,32.81"
-        android:strokeColor="#ededed" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#949497"
-        android:pathData="M30.1,32.42L32.92,34.05"
-        android:strokeColor="#525252" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#97979b"
-        android:pathData="M32.42,35.98L29.16,35.98"
-        android:strokeColor="#6e6e6e" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#a8a8ac"
-        android:pathData="M36.06,43.08L36.06,39.82"
-        android:strokeColor="#a0a0a0" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#cacaca"
-        android:pathData="M39.7,41.99L38.07,39.16"
-        android:strokeColor="#cacaca" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#b6b6ba"
-        android:pathData="M42.19,39.4L39.37,37.77"
-        android:strokeColor="#ccc" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#a1a1a5"
-        android:pathData="M32.46,41.98L34.09,39.16"
-        android:strokeColor="#909090" android:strokeLineCap="round" android:strokeWidth="1"/>
-    <path android:fillColor="#9d9da0"
-        android:pathData="M29.85,39.4L32.67,37.77"
-        android:strokeColor="#7a7a7a" android:strokeLineCap="round" android:strokeWidth="1"/>
-</vector>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_2.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_2.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_2.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,14 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="500"
-    android:viewportWidth="500" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#6ab343" android:pathData="M181.16,316.18m-181.7,0a181.7,181.7 0,1 1,363.4 0a181.7,181.7 0,1 1,-363.4 0"/>
-    <path android:fillColor="#fff" android:pathData="M79.71,267.04L144.93,267.04A5.49,5.49 0,0 1,150.42 272.53L150.42,272.58A5.49,5.49 0,0 1,144.93 278.07L79.71,278.07A5.49,5.49 0,0 1,74.22 272.58L74.22,272.53A5.49,5.49 0,0 1,79.71 267.04z"/>
-    <path android:fillColor="#fff" android:pathData="M217.39,267.04L282.61,267.04A5.49,5.49 0,0 1,288.1 272.53L288.1,272.58A5.49,5.49 0,0 1,282.61 278.07L217.39,278.07A5.49,5.49 0,0 1,211.9 272.58L211.9,272.53A5.49,5.49 0,0 1,217.39 267.04z"/>
-    <path android:fillColor="#00000000"
-        android:pathData="M268.86,383.11L92.91,382.36"
-        android:strokeColor="#fff" android:strokeLineCap="round" android:strokeWidth="20"/>
-    <path android:fillColor="#eee" android:pathData="M398.31,101.69m-101.69,0a101.69,101.69 0,1 1,203.38 0a101.69,101.69 0,1 1,-203.38 0"/>
-    <path android:fillColor="#eee" android:pathData="M267.86,57.09m-24.76,0a24.76,24.76 0,1 1,49.52 0a24.76,24.76 0,1 1,-49.52 0"/>
-    <path android:fillColor="#eee" android:pathData="M224.93,85.36m-16.33,0a16.33,16.33 0,1 1,32.66 0a16.33,16.33 0,1 1,-32.66 0"/>
-    <path android:fillColor="#eee" android:pathData="M217.77,120.19m-9.17,0a9.17,9.17 0,1 1,18.34 0a9.17,9.17 0,1 1,-18.34 0"/>
-    <path android:fillColor="#6ab343" android:pathData="M366.07,134.23l19.13,-19.12q14.18,-14.17 18.22,-18.53a48.84,48.84 0,0 0,7.43 -9.75,18.89 18.89,0 0,0 2,-8.85 11.59,11.59 0,0 0,-3.9 -8.85q-3.9,-3.6 -10.35,-3.6a14.44,14.44 0,0 0,-10.2 3.6,19.9 19.9,0 0,0 -5.55,9l-17.7,-7.35a31.77,31.77 0,0 1,6.08 -11.32,33.4 33.4,0 0,1 11.47,-8.93 36.54,36.54 0,0 1,16.2 -3.45,38.19 38.19,0 0,1 17.85,4 29.55,29.55 0,0 1,11.85 10.8,28.48 28.48,0 0,1 4.2,15.22q0,16.65 -16.2,32.55 -6.6,6.47 -24.45,24.3l0.45,0.9h41.55v17.25h-68.1Z"/>
-</vector>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/navigation/nav_graph.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/navigation/nav_graph.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/navigation/nav_graph.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<navigation xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/nav_graph"
-    app:startDestination="@id/overviewFragment">
-
-    <fragment
-        android:id="@+id/overviewFragment"
-        android:name="com.example.android.marsrealestate.overview.OverviewFragment"
-        android:label="fragment_overview"
-        tools:layout="@layout/fragment_overview" >
-        <action
-            android:id="@+id/action_showDetail"
-            app:destination="@id/detailFragment" />
-    </fragment>
-
-    <fragment
-        android:id="@+id/detailFragment"
-        android:name="com.example.android.marsrealestate.detail.DetailFragment"
-        android:label="fragment_detail"
-        tools:layout="@layout/fragment_detail">
-    </fragment>
-
-</navigation>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/BindingAdapters.kt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/BindingAdapters.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/BindingAdapters.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,41 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.android.marsrealestate
-
-import android.widget.ImageView
-import androidx.core.net.toUri
-import androidx.databinding.BindingAdapter
-import com.bumptech.glide.Glide
-import com.bumptech.glide.request.RequestOptions
-
-// TODO (10) Add a binding adapter for the listData attribute that calls submitList on the RV adapter
-/**
- * Uses the Glide library to load an image by URL into an [ImageView]
- */
-@BindingAdapter("imageUrl")
-fun bindImage(imgView: ImageView, imgUrl: String?) {
-    imgUrl?.let {
-        val imgUri = imgUrl.toUri().buildUpon().scheme("https").build()
-        Glide.with(imgView.context)
-                .load(imgUri)
-                .apply(RequestOptions()
-                        .placeholder(R.drawable.loading_animation)
-                        .error(R.drawable.ic_broken_image))
-                .into(imgView)
-    }
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_5.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_5.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_5.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,12 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="500"
-    android:viewportWidth="500" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#6ab343" android:pathData="M181.16,316.18m-181.7,0a181.7,181.7 0,1 1,363.4 0a181.7,181.7 0,1 1,-363.4 0"/>
-    <path android:fillColor="#fff" android:pathData="M79.25,272.792L143.479,261.466A5.49,5.49 125,0 1,149.839 265.919L149.848,265.969A5.49,5.49 125,0 1,145.395 272.329L81.165,283.654A5.49,5.49 125,0 1,74.805 279.201L74.797,279.151A5.49,5.49 125,0 1,79.25 272.792z"/>
-    <path android:fillColor="#fff" android:pathData="M218.846,261.462L283.076,272.788A5.49,5.49 55,0 1,287.529 279.148L287.52,279.197A5.49,5.49 55,0 1,281.16 283.65L216.931,272.325A5.49,5.49 55,0 1,212.478 265.965L212.486,265.916A5.49,5.49 55,0 1,218.846 261.462z"/>
-    <path android:fillColor="#fff" android:pathData="M274.74,337.67a9.55,9.55 0,0 1,9.41 11.11c-7.36,44.12 -57.39,78.27 -103,78.27s-95.63,-34.15 -103,-78.27a9.55,9.55 0,0 1,9.41 -11.11Z"/>
-    <path android:fillColor="#eee" android:pathData="M398.31,101.69m-101.69,0a101.69,101.69 0,1 1,203.38 0a101.69,101.69 0,1 1,-203.38 0"/>
-    <path android:fillColor="#eee" android:pathData="M267.86,57.09m-24.76,0a24.76,24.76 0,1 1,49.52 0a24.76,24.76 0,1 1,-49.52 0"/>
-    <path android:fillColor="#eee" android:pathData="M224.93,85.36m-16.33,0a16.33,16.33 0,1 1,32.66 0a16.33,16.33 0,1 1,-32.66 0"/>
-    <path android:fillColor="#eee" android:pathData="M217.77,120.19m-9.17,0a9.17,9.17 0,1 1,18.34 0a9.17,9.17 0,1 1,-18.34 0"/>
-    <path android:fillColor="#6ab343" android:pathData="M383.77,151.41a35.84,35.84 0,0 1,-13.12 -9.3,33.67 33.67,0 0,1 -7.73,-15.38l17.7,-6.9a23.14,23.14 0,0 0,6.6 12.08,17 17,0 0,0 12,4.42 16.24,16.24 0,0 0,12 -4.8,16.43 16.43,0 0,0 4.8,-12.15 16.66,16.66 0,0 0,-4.72 -12.07,16.1 16.1,0 0,0 -12.08,-4.88 17.71,17.71 0,0 0,-8.17 1.88,19.05 19.05,0 0,0 -6.23,5l-19.05,-8.55 5.85,-51.3h57.9V66.73H388l-3.75,24 1.2,0.3a27.32,27.32 0,0 1,17.85 -6.15,31.18 31.18,0 0,1 16,4.35 32.65,32.65 0,0 1,11.92 12.23,35.49 35.49,0 0,1 4.5,17.92A35.22,35.22 0,0 1,431 137.53,32.81 32.81,0 0,1 418.12,150a38.51,38.51 0,0 1,-18.75 4.5A40.73,40.73 0,0 1,383.77 151.41Z"/>
-</vector>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/styles.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/styles.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/styles.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-        <item name="colorPrimary">@color/colorPrimary</item>
-        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
-        <item name="colorAccent">@color/colorAccent</item>
-    </style>
-
-    <!-- Basic styling for the buttons. -->
-    <style name="SleepButtons" parent="Widget.AppCompat.Button.Colored">
-        <item name="android:textColor">@color/white_text_color</item>
-        <item name="colorAccent">@color/green_color</item>
-        <item name="colorControlHighlight">@color/green_color</item>
-        <item name="android:textStyle">bold</item>
-    </style>
-
-</resources>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/.gitignore
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/.gitignore	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/.gitignore	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,22 +0,0 @@
-*.iml
-.gradle
-/local.properties
-/.idea/caches
-/.idea/codeStyles
-/.idea/compiler.xml
-/.idea/copyright
-/.idea/encodings.xml
-/.idea/gradle.xml
-/.idea/libraries
-/.idea/misc.xml
-/.idea/modules.xml
-/.idea/workspace.xml
-/.idea/runConfigurations.xml
-/.idea/vcs.xml
-/.idea/workspace.xml
-/.idea/assetWizardSettings.xml
-/.idea/navEditor.xml
-.DS_Store
-/build
-/captures
-.externalNativeBuild
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/README.md
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/README.md	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/README.md	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,118 +0,0 @@
-# Connect to the Internet - Mars Real Estate
-
-This is the toy app for Lesson 8 of the [Android App Development in Kotlin course on Udacity](https://classroom.udacity.com/courses/ud9012/).
-
-## MarsRealEstate
-
-MarsRealEstate is a simple demo app using ViewModel & LiveData with Retrofit, Glide and Moshi in Kotlin.
-
-This app demonstrates the following views and techniques:
-
-* [Retrofit](https://square.github.io/retrofit/) to make api calls to an HTTP web service
-* [Moshi](https://github.com/square/moshi) which handles the deserialization of the returned JSON to Kotlin data objects 
-* [Glide](https://bumptech.github.io/glide/) to load and cache images by URL.
-  
-It leverages the following components from the Jetpack library:
-
-* [ViewModel](https://developer.android.com/topic/libraries/architecture/viewmodel)
-* [LiveData](https://developer.android.com/topic/libraries/architecture/livedata)
-* [Data Binding](https://developer.android.com/topic/libraries/data-binding/) with binding adapters
-* [Navigation](https://developer.android.com/topic/libraries/architecture/navigation/) with the SafeArgs plugin for parameter passing between fragments
-
-## Screenshots
-
-![Screenshot 1](screenshots/screen_1.png)
-![Screenshot 2](screenshots/screen_2.png)
-![Screenshot 3](screenshots/screen_3.png)
-
-## How to use this repo while taking the course
-
-
-Each code repository in this class has a chain of commits that looks like this:
-
-![listofcommits](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58befe2e_listofcommits/listofcommits.png)
-
-These commits show every step you'll take to create the app. Each commit contains instructions for completing the that step.
-
-Each commit also has a **branch** associated with it of the same name as the commit message, as seen below:
-
-![branches](https://d17h27t6h515a5.cloudfront.net/topher/2017/April/590390fe_branches-ud855/branches-ud855.png
-)
-Access all branches from this tab.
-
-![listofbranches](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58befe76_listofbranches/listofbranches.png
-)
-
-
-![branchesdropdown](https://d17h27t6h515a5.cloudfront.net/topher/2017/April/590391a3_branches-dropdown-ud855/branches-dropdown-ud855.png
-)
-
-The branches are also accessible from the drop-down in the "Code" tab.
-
-
-## Working with the Course Code
-
-Here are the basic steps for working with and completing exercises in the repo.
-
-The basic steps are:
-
-1. Clone the repo.
-2. Check out the branch corresponding to the step you want to attempt.
-3. Find and complete the TODOs.
-4. Optionally commit your code changes.
-5. Compare your code with the solution.
-6. Repeat steps 2-5 until you've gone trough all the steps to complete the toy app.
-
-
-**Step 1: Clone the repo**
-
-As you go through the course, you'll be instructed to clone the different exercise repositories, so you don't need to set these up now. You can clone a repository from github in a folder of your choice with the command:
-
-```bash
-git clone https://github.com/udacity/REPOSITORY_NAME.git
-```
-
-**Step 2: Check out the step branch**
-
-As you go through different steps in the code, you'll be told which step you're on, as well as a link to the corresponding branch.
-
-You'll want to check out the branch associated with that step. The command to check out a branch would be:
-
-```bash
-git checkout BRANCH_NAME
-```
-
-**Step 3: Find and complete the TODOs**
-
-Once you've checked out the branch, you'll have the code in the exact state you need. You'll even have TODOs, which are special comments that tell you all the steps you need to complete the exercise. You can easily navigate to all the TODOs using Android Studio's TODO tool. To open the TODO tool, click the button at the bottom of the screen that says TODO. This will display a list of all comments with TODO in the project. 
-
-We've numbered the TODO steps so you can do them in order:
-![todos](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58bf00e7_todos/todos.png
-)
-
-**Step 4: Commit your code changes**
-
-After You've completed the TODOs, you can optionally commit your changes. This will allow you to see the code you wrote whenever you return to the branch. The following git code will add and save **all** your changes.
-
-```bash
-git add .
-git commit -m "Your commit message"
-```
-
-**Step 5: Compare with the solution**
-
-Most exercises will have a list of steps for you to check off in the classroom. Once you've checked these off, you'll see a pop up window with a link to the solution code. Note the **Diff** link:
-
-![solutionwindow](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58bf00f9_solutionwindow/solutionwindow.png
-)
-
-The **Diff** link will take you to a Github diff as seen below:
-![diff](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58bf0108_diffsceenshot/diffsceenshot.png
-)
-
-All of the code that was added in the solution is in green, and the removed code (which will usually be the TODO comments) is in red. 
-
-You can also compare your code locally with the branch of the following step.
-
-## Report Issues
-Notice any issues with a repository? Please file a github issue in the repository.
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/LICENSE.txt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/LICENSE.txt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/LICENSE.txt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,613 +0,0 @@
-All image and audio files (including *.png, *.jpg, *.svg, *.mp3, *.wav
-and *.ogg) are licensed under the CC BY 4.0 license. All other files are
-licensed under the Apache 2 license.
-
-=======================================================================
-
-Apache License
---------------
-
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright {yyyy} {name of copyright owner}
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-All image and audio files (including *.png, *.jpg, *.svg, *.mp3, *.wav
-and *.ogg) are licensed under the CC BY 4.0 license. All other files are
-licensed under the Apache 2 license.
-
-CC-BY License
-----------------
-
-Attribution 4.0 International
-
-=======================================================================
-
-Creative Commons Corporation ("Creative Commons") is not a law firm and
-does not provide legal services or legal advice. Distribution of
-Creative Commons public licenses does not create a lawyer-client or
-other relationship. Creative Commons makes its licenses and related
-information available on an "as-is" basis. Creative Commons gives no
-warranties regarding its licenses, any material licensed under their
-terms and conditions, or any related information. Creative Commons
-disclaims all liability for damages resulting from their use to the
-fullest extent possible.
-
-Using Creative Commons Public Licenses
-
-Creative Commons public licenses provide a standard set of terms and
-conditions that creators and other rights holders may use to share
-original works of authorship and other material subject to copyright
-and certain other rights specified in the public license below. The
-following considerations are for informational purposes only, are not
-exhaustive, and do not form part of our licenses.
-
-     Considerations for licensors: Our public licenses are
-     intended for use by those authorized to give the public
-     permission to use material in ways otherwise restricted by
-     copyright and certain other rights. Our licenses are
-     irrevocable. Licensors should read and understand the terms
-     and conditions of the license they choose before applying it.
-     Licensors should also secure all rights necessary before
-     applying our licenses so that the public can reuse the
-     material as expected. Licensors should clearly mark any
-     material not subject to the license. This includes other CC-
-     licensed material, or material used under an exception or
-     limitation to copyright. More considerations for licensors:
-  wiki.creativecommons.org/Considerations_for_licensors
-
-     Considerations for the public: By using one of our public
-     licenses, a licensor grants the public permission to use the
-     licensed material under specified terms and conditions. If
-     the licensor's permission is not necessary for any reason--for
-     example, because of any applicable exception or limitation to
-     copyright--then that use is not regulated by the license. Our
-     licenses grant only permissions under copyright and certain
-     other rights that a licensor has authority to grant. Use of
-     the licensed material may still be restricted for other
-     reasons, including because others have copyright or other
-     rights in the material. A licensor may make special requests,
-     such as asking that all changes be marked or described.
-     Although not required by our licenses, you are encouraged to
-     respect those requests where reasonable. More_considerations
-     for the public:
-  wiki.creativecommons.org/Considerations_for_licensees
-
-=======================================================================
-
-Creative Commons Attribution 4.0 International Public License
-
-By exercising the Licensed Rights (defined below), You accept and agree
-to be bound by the terms and conditions of this Creative Commons
-Attribution 4.0 International Public License ("Public License"). To the
-extent this Public License may be interpreted as a contract, You are
-granted the Licensed Rights in consideration of Your acceptance of
-these terms and conditions, and the Licensor grants You such rights in
-consideration of benefits the Licensor receives from making the
-Licensed Material available under these terms and conditions.
-
-
-Section 1 -- Definitions.
-
-  a. Adapted Material means material subject to Copyright and Similar
-     Rights that is derived from or based upon the Licensed Material
-     and in which the Licensed Material is translated, altered,
-     arranged, transformed, or otherwise modified in a manner requiring
-     permission under the Copyright and Similar Rights held by the
-     Licensor. For purposes of this Public License, where the Licensed
-     Material is a musical work, performance, or sound recording,
-     Adapted Material is always produced where the Licensed Material is
-     synched in timed relation with a moving image.
-
-  b. Adapter's License means the license You apply to Your Copyright
-     and Similar Rights in Your contributions to Adapted Material in
-     accordance with the terms and conditions of this Public License.
-
-  c. Copyright and Similar Rights means copyright and/or similar rights
-     closely related to copyright including, without limitation,
-     performance, broadcast, sound recording, and Sui Generis Database
-     Rights, without regard to how the rights are labeled or
-     categorized. For purposes of this Public License, the rights
-     specified in Section 2(b)(1)-(2) are not Copyright and Similar
-     Rights.
-
-  d. Effective Technological Measures means those measures that, in the
-     absence of proper authority, may not be circumvented under laws
-     fulfilling obligations under Article 11 of the WIPO Copyright
-     Treaty adopted on December 20, 1996, and/or similar international
-     agreements.
-
-  e. Exceptions and Limitations means fair use, fair dealing, and/or
-     any other exception or limitation to Copyright and Similar Rights
-     that applies to Your use of the Licensed Material.
-
-  f. Licensed Material means the artistic or literary work, database,
-     or other material to which the Licensor applied this Public
-     License.
-
-  g. Licensed Rights means the rights granted to You subject to the
-     terms and conditions of this Public License, which are limited to
-     all Copyright and Similar Rights that apply to Your use of the
-     Licensed Material and that the Licensor has authority to license.
-
-  h. Licensor means the individual(s) or entity(ies) granting rights
-     under this Public License.
-
-  i. Share means to provide material to the public by any means or
-     process that requires permission under the Licensed Rights, such
-     as reproduction, public display, public performance, distribution,
-     dissemination, communication, or importation, and to make material
-     available to the public including in ways that members of the
-     public may access the material from a place and at a time
-     individually chosen by them.
-
-  j. Sui Generis Database Rights means rights other than copyright
-     resulting from Directive 96/9/EC of the European Parliament and of
-     the Council of 11 March 1996 on the legal protection of databases,
-     as amended and/or succeeded, as well as other essentially
-     equivalent rights anywhere in the world.
-
-  k. You means the individual or entity exercising the Licensed Rights
-     under this Public License. Your has a corresponding meaning.
-
-
-Section 2 -- Scope.
-
-  a. License grant.
-
-       1. Subject to the terms and conditions of this Public License,
-          the Licensor hereby grants You a worldwide, royalty-free,
-          non-sublicensable, non-exclusive, irrevocable license to
-          exercise the Licensed Rights in the Licensed Material to:
-
-            a. reproduce and Share the Licensed Material, in whole or
-               in part; and
-
-            b. produce, reproduce, and Share Adapted Material.
-
-       2. Exceptions and Limitations. For the avoidance of doubt, where
-          Exceptions and Limitations apply to Your use, this Public
-          License does not apply, and You do not need to comply with
-          its terms and conditions.
-
-       3. Term. The term of this Public License is specified in Section
-          6(a).
-
-       4. Media and formats; technical modifications allowed. The
-          Licensor authorizes You to exercise the Licensed Rights in
-          all media and formats whether now known or hereafter created,
-          and to make technical modifications necessary to do so. The
-          Licensor waives and/or agrees not to assert any right or
-          authority to forbid You from making technical modifications
-          necessary to exercise the Licensed Rights, including
-          technical modifications necessary to circumvent Effective
-          Technological Measures. For purposes of this Public License,
-          simply making modifications authorized by this Section 2(a)
-          (4) never produces Adapted Material.
-
-       5. Downstream recipients.
-
-            a. Offer from the Licensor -- Licensed Material. Every
-               recipient of the Licensed Material automatically
-               receives an offer from the Licensor to exercise the
-               Licensed Rights under the terms and conditions of this
-               Public License.
-
-            b. No downstream restrictions. You may not offer or impose
-               any additional or different terms or conditions on, or
-               apply any Effective Technological Measures to, the
-               Licensed Material if doing so restricts exercise of the
-               Licensed Rights by any recipient of the Licensed
-               Material.
-
-       6. No endorsement. Nothing in this Public License constitutes or
-          may be construed as permission to assert or imply that You
-          are, or that Your use of the Licensed Material is, connected
-          with, or sponsored, endorsed, or granted official status by,
-          the Licensor or others designated to receive attribution as
-          provided in Section 3(a)(1)(A)(i).
-
-  b. Other rights.
-
-       1. Moral rights, such as the right of integrity, are not
-          licensed under this Public License, nor are publicity,
-          privacy, and/or other similar personality rights; however, to
-          the extent possible, the Licensor waives and/or agrees not to
-          assert any such rights held by the Licensor to the limited
-          extent necessary to allow You to exercise the Licensed
-          Rights, but not otherwise.
-
-       2. Patent and trademark rights are not licensed under this
-          Public License.
-
-       3. To the extent possible, the Licensor waives any right to
-          collect royalties from You for the exercise of the Licensed
-          Rights, whether directly or through a collecting society
-          under any voluntary or waivable statutory or compulsory
-          licensing scheme. In all other cases the Licensor expressly
-          reserves any right to collect such royalties.
-
-
-Section 3 -- License Conditions.
-
-Your exercise of the Licensed Rights is expressly made subject to the
-following conditions.
-
-  a. Attribution.
-
-       1. If You Share the Licensed Material (including in modified
-          form), You must:
-
-            a. retain the following if it is supplied by the Licensor
-               with the Licensed Material:
-
-                 i. identification of the creator(s) of the Licensed
-                    Material and any others designated to receive
-                    attribution, in any reasonable manner requested by
-                    the Licensor (including by pseudonym if
-                    designated);
-
-                ii. a copyright notice;
-
-               iii. a notice that refers to this Public License;
-
-                iv. a notice that refers to the disclaimer of
-                    warranties;
-
-                 v. a URI or hyperlink to the Licensed Material to the
-                    extent reasonably practicable;
-
-            b. indicate if You modified the Licensed Material and
-               retain an indication of any previous modifications; and
-
-            c. indicate the Licensed Material is licensed under this
-               Public License, and include the text of, or the URI or
-               hyperlink to, this Public License.
-
-       2. You may satisfy the conditions in Section 3(a)(1) in any
-          reasonable manner based on the medium, means, and context in
-          which You Share the Licensed Material. For example, it may be
-          reasonable to satisfy the conditions by providing a URI or
-          hyperlink to a resource that includes the required
-          information.
-
-       3. If requested by the Licensor, You must remove any of the
-          information required by Section 3(a)(1)(A) to the extent
-          reasonably practicable.
-
-       4. If You Share Adapted Material You produce, the Adapter's
-          License You apply must not prevent recipients of the Adapted
-          Material from complying with this Public License.
-
-
-Section 4 -- Sui Generis Database Rights.
-
-Where the Licensed Rights include Sui Generis Database Rights that
-apply to Your use of the Licensed Material:
-
-  a. for the avoidance of doubt, Section 2(a)(1) grants You the right
-     to extract, reuse, reproduce, and Share all or a substantial
-     portion of the contents of the database;
-
-  b. if You include all or a substantial portion of the database
-     contents in a database in which You have Sui Generis Database
-     Rights, then the database in which You have Sui Generis Database
-     Rights (but not its individual contents) is Adapted Material; and
-
-  c. You must comply with the conditions in Section 3(a) if You Share
-     all or a substantial portion of the contents of the database.
-
-For the avoidance of doubt, this Section 4 supplements and does not
-replace Your obligations under this Public License where the Licensed
-Rights include other Copyright and Similar Rights.
-
-
-Section 5 -- Disclaimer of Warranties and Limitation of Liability.
-
-  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE
-     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS
-     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF
-     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,
-     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,
-     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR
-     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,
-     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT
-     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT
-     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.
-
-  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE
-     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,
-     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,
-     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,
-     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR
-     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN
-     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR
-     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR
-     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.
-
-  c. The disclaimer of warranties and limitation of liability provided
-     above shall be interpreted in a manner that, to the extent
-     possible, most closely approximates an absolute disclaimer and
-     waiver of all liability.
-
-
-Section 6 -- Term and Termination.
-
-  a. This Public License applies for the term of the Copyright and
-     Similar Rights licensed here. However, if You fail to comply with
-     this Public License, then Your rights under this Public License
-     terminate automatically.
-
-  b. Where Your right to use the Licensed Material has terminated under
-     Section 6(a), it reinstates:
-
-       1. automatically as of the date the violation is cured, provided
-          it is cured within 30 days of Your discovery of the
-          violation; or
-
-       2. upon express reinstatement by the Licensor.
-
-     For the avoidance of doubt, this Section 6(b) does not affect any
-     right the Licensor may have to seek remedies for Your violations
-     of this Public License.
-
-  c. For the avoidance of doubt, the Licensor may also offer the
-     Licensed Material under separate terms or conditions or stop
-     distributing the Licensed Material at any time; however, doing so
-     will not terminate this Public License.
-
-  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public
-     License.
-
-
-Section 7 -- Other Terms and Conditions.
-
-  a. The Licensor shall not be bound by any additional or different
-     terms or conditions communicated by You unless expressly agreed.
-
-  b. Any arrangements, understandings, or agreements regarding the
-     Licensed Material not stated herein are separate from and
-     independent of the terms and conditions of this Public License.
-
-
-Section 8 -- Interpretation.
-
-  a. For the avoidance of doubt, this Public License does not, and
-     shall not be interpreted to, reduce, limit, restrict, or impose
-     conditions on any use of the Licensed Material that could lawfully
-     be made without permission under this Public License.
-
-  b. To the extent possible, if any provision of this Public License is
-     deemed unenforceable, it shall be automatically reformed to the
-     minimum extent necessary to make it enforceable. If the provision
-     cannot be reformed, it shall be severed from this Public License
-     without affecting the enforceability of the remaining terms and
-     conditions.
-
-  c. No term or condition of this Public License will be waived and no
-     failure to comply consented to unless expressly agreed to by the
-     Licensor.
-
-  d. Nothing in this Public License constitutes or may be interpreted
-     as a limitation upon, or waiver of, any privileges and immunities
-     that apply to the Licensor or You, including from the legal
-     processes of any jurisdiction or authority.
-
-
-=======================================================================
-
-Creative Commons is not a party to its public
-licenses. Notwithstanding, Creative Commons may elect to apply one of
-its public licenses to material it publishes and in those instances
-will be considered the “Licensor.” The text of the Creative Commons
-public licenses is dedicated to the public domain under the CC0 Public
-Domain Dedication. Except for the limited purpose of indicating that
-material is shared under a Creative Commons public license or as
-otherwise permitted by the Creative Commons policies published at
-creativecommons.org/policies, Creative Commons does not authorize the
-use of the trademark "Creative Commons" or any other trademark or logo
-of Creative Commons without its prior written consent including,
-without limitation, in connection with any unauthorized modifications
-to any of its public licenses or any other arrangements,
-understandings, or agreements concerning use of licensed material. For
-the avoidance of doubt, this paragraph does not form part of the
-public licenses.
-
-Creative Commons may be contacted at creativecommons.org.
-
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/values/strings.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/values/strings.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/values/strings.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,28 +0,0 @@
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="app_name">Real Estate on Mars</string>
-    <string name="show_all">Show all</string>
-    <string name="show_rent">Rent</string>
-    <string name="show_buy">Buy</string>
-    <string name="type_rent">Rent</string>
-    <string name="type_sale">Sale</string>
-    <string name="display_type">For %s</string>
-    <string name="display_price_monthly_rental">$%,.0f/month</string>
-    <string name="display_price">$%,.0f</string>
-</resources>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/fragment_sleep_tracker.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/fragment_sleep_tracker.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/fragment_sleep_tracker.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,95 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<!-- Wrapping the layout into /layout to make it available with data binding. -->
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <!-- Data to make available to the XML via data binding. In this case,
-         the whole ViewModel, so that we can access the LiveData,
-         click handlers, and state variables. -->
-    <data>
-
-        <variable
-            name="sleepTrackerViewModel"
-            type="com.example.android.trackmysleepquality.sleeptracker.SleepTrackerViewModel" />
-    </data>
-
-    <!-- Start of the visible fragment layout using ConstraintLayout -->
-    <androidx.constraintlayout.widget.ConstraintLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        tools:context=".sleeptracker.SleepTrackerFragment">
-
-        <androidx.recyclerview.widget.RecyclerView
-            android:id="@+id/sleep_list"
-            android:layout_width="0dp"
-            android:layout_height="0dp"
-            app:layout_constraintBottom_toTopOf="@+id/clear_button"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@+id/stop_button"/>
-
-        <!-- With data binding and LiveData, we can track the buttons' visibility states
-             from the ViewModel. The click handler is in the ViewModel as well, and
-             you can set it for the Views using this lambda pattern. -->
-
-        <Button
-            android:id="@+id/start_button"
-            style="@style/SleepButtons"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginStart="@dimen/margin"
-            android:text="@string/start"
-            android:enabled="@{sleepTrackerViewModel.startButtonVisible}"
-            android:onClick="@{() -> sleepTrackerViewModel.onStartTracking()}"
-            app:layout_constraintBaseline_toBaselineOf="@id/stop_button"
-            app:layout_constraintEnd_toStartOf="@+id/stop_button"
-            app:layout_constraintHorizontal_chainStyle="spread"
-            app:layout_constraintStart_toStartOf="parent" />
-
-        <Button
-            android:id="@+id/stop_button"
-            style="@style/SleepButtons"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/margin"
-            android:layout_marginEnd="@dimen/margin"
-            android:text="@string/stop"
-            android:enabled="@{sleepTrackerViewModel.stopButtonVisible}"
-            android:onClick="@{() -> sleepTrackerViewModel.onStopTracking()}"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toEndOf="@+id/start_button"
-            app:layout_constraintTop_toTopOf="parent" />
-
-        <Button
-            android:id="@+id/clear_button"
-            style="@style/SleepButtons"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginStart="@dimen/margin"
-            android:layout_marginEnd="@dimen/margin"
-            android:layout_marginBottom="@dimen/margin"
-            android:text="@string/clear"
-            android:enabled="@{sleepTrackerViewModel.clearButtonVisible}"
-            android:onClick="@{() -> sleepTrackerViewModel.onClear()}"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent" />
-
-    </androidx.constraintlayout.widget.ConstraintLayout>
-</layout>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/font_certs.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/font_certs.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/font_certs.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <array name="com_google_android_gms_fonts_certs">
-        <item>@array/com_google_android_gms_fonts_certs_dev</item>
-        <item>@array/com_google_android_gms_fonts_certs_prod</item>
-    </array>
-    <string-array name="com_google_android_gms_fonts_certs_dev">
-        <item>
-            MIIEqDCCA5CgAwIBAgIJANWFuGx90071MA0GCSqGSIb3DQEBBAUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbTAeFw0wODA0MTUyMzM2NTZaFw0zNTA5MDEyMzM2NTZaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbTCCASAwDQYJKoZIhvcNAQEBBQADggENADCCAQgCggEBANbOLggKv+IxTdGNs8/TGFy0PTP6DHThvbbR24kT9ixcOd9W+EaBPWW+wPPKQmsHxajtWjmQwWfna8mZuSeJS48LIgAZlKkpFeVyxW0qMBujb8X8ETrWy550NaFtI6t9+u7hZeTfHwqNvacKhp1RbE6dBRGWynwMVX8XW8N1+UjFaq6GCJukT4qmpN2afb8sCjUigq0GuMwYXrFVee74bQgLHWGJwPmvmLHC69EH6kWr22ijx4OKXlSIx2xT1AsSHee70w5iDBiK4aph27yH3TxkXy9V89TDdexAcKk/cVHYNnDBapcavl7y0RiQ4biu8ymM8Ga/nmzhRKya6G0cGw8CAQOjgfwwgfkwHQYDVR0OBBYEFI0cxb6VTEM8YYY6FbBMvAPyT+CyMIHJBgNVHSMEgcEwgb6AFI0cxb6VTEM8YYY6FbBMvAPyT+CyoYGapIGXMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbYIJANWFuGx90071MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEEBQADggEBABnTDPEF+3iSP0wNfdIjIz1AlnrPzgAIHVvXxunW7SBrDhEglQZBbKJEk5kT0mtKoOD1JMrSu1xuTKEBahWRbqHsXclaXjoBADb0kkjVEJu/Lh5hgYZnOjvlba8Ld7HCKePCVePoTJBdI4fvugnL8TsgK05aIskyY0hKI9L8KfqfGTl1lzOv2KoWD0KWwtAWPoGChZxmQ+nBli+gwYMzM1vAkP+aayLe0a1EQimlOalO762r0GXO0ks+UeXde2Z4e+8S/pf7pITEI/tP+MxJTALw9QUWEv9lKTk+jkbqxbsh8nfBUapfKqYn0eidpwq2AzVp3juYl7//fKnaPhJD9gs=
-        </item>
-    </string-array>
-    <string-array name="com_google_android_gms_fonts_certs_prod">
-        <item>
-            MIIEQzCCAyugAwIBAgIJAMLgh0ZkSjCNMA0GCSqGSIb3DQEBBAUAMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDAeFw0wODA4MjEyMzEzMzRaFw0zNjAxMDcyMzEzMzRaMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDCCASAwDQYJKoZIhvcNAQEBBQADggENADCCAQgCggEBAKtWLgDYO6IIrgqWbxJOKdoR8qtW0I9Y4sypEwPpt1TTcvZApxsdyxMJZ2JORland2qSGT2y5b+3JKkedxiLDmpHpDsz2WCbdxgxRczfey5YZnTJ4VZbH0xqWVW/8lGmPav5xVwnIiJS6HXk+BVKZF+JcWjAsb/GEuq/eFdpuzSqeYTcfi6idkyugwfYwXFU1+5fZKUaRKYCwkkFQVfcAs1fXA5V+++FGfvjJ/CxURaSxaBvGdGDhfXE28LWuT9ozCl5xw4Yq5OGazvV24mZVSoOO0yZ31j7kYvtwYK6NeADwbSxDdJEqO4k//0zOHKrUiGYXtqw/A0LFFtqoZKFjnkCAQOjgdkwgdYwHQYDVR0OBBYEFMd9jMIhF1Ylmn/Tgt9r45jk14alMIGmBgNVHSMEgZ4wgZuAFMd9jMIhF1Ylmn/Tgt9r45jk14aloXikdjB0MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEUMBIGA1UEChMLR29vZ2xlIEluYy4xEDAOBgNVBAsTB0FuZHJvaWQxEDAOBgNVBAMTB0FuZHJvaWSCCQDC4IdGZEowjTAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBAUAA4IBAQBt0lLO74UwLDYKqs6Tm8/yzKkEu116FmH4rkaymUIE0P9KaMftGlMexFlaYjzmB2OxZyl6euNXEsQH8gjwyxCUKRJNexBiGcCEyj6z+a1fuHHvkiaai+KL8W1EyNmgjmyy8AW7P+LLlkR+ho5zEHatRbM/YAnqGcFh5iZBqpknHf1SKMXFh4dd239FJ1jWYfbMDMy3NS5CTMQ2XFI1MvcyUTdZPErjQfTbQe3aDQsQcafEQPD+nqActifKZ0Np0IS9L9kR/wbNvyz6ENwPiTrjV2KRkEjH78ZMcUQXg0L3BYHJ3lc69Vs5Ddf9uUGGMYldX3WfMBEmh/9iFBDAaTCK
-        </item>
-    </string-array>
-</resources>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepquality/SleepQualityFragment.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepquality/SleepQualityFragment.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepquality/SleepQualityFragment.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,82 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleepquality
-
-import android.os.Bundle
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.databinding.DataBindingUtil
-import androidx.fragment.app.Fragment
-import androidx.lifecycle.Observer
-import androidx.lifecycle.ViewModelProvider
-import androidx.navigation.fragment.findNavController
-import com.example.android.trackmysleepquality.R
-import com.example.android.trackmysleepquality.database.SleepDatabase
-import com.example.android.trackmysleepquality.databinding.FragmentSleepQualityBinding
-
-/**
- * Fragment that displays a list of clickable icons,
- * each representing a sleep quality rating.
- * Once the user taps an icon, the quality is set in the current sleepNight
- * and the database is updated.
- */
-class SleepQualityFragment : Fragment() {
-
-    /**
-     * Called when the Fragment is ready to display content to the screen.
-     *
-     * This function uses DataBindingUtil to inflate R.layout.fragment_sleep_quality.
-     */
-    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,
-                              savedInstanceState: Bundle?): View? {
-
-        // Get a reference to the binding object and inflate the fragment views.
-        val binding: FragmentSleepQualityBinding = DataBindingUtil.inflate(
-                inflater, R.layout.fragment_sleep_quality, container, false)
-
-        val application = requireNotNull(this.activity).application
-
-        val arguments = SleepQualityFragmentArgs.fromBundle(arguments!!)
-
-        // Create an instance of the ViewModel Factory.
-        val dataSource = SleepDatabase.getInstance(application).sleepDatabaseDao
-        val viewModelFactory = SleepQualityViewModelFactory(arguments.sleepNightKey, dataSource)
-
-        // Get a reference to the ViewModel associated with this fragment.
-        val sleepQualityViewModel =
-                ViewModelProvider(
-                        this, viewModelFactory).get(SleepQualityViewModel::class.java)
-
-        // To use the View Model with data binding, you have to explicitly
-        // give the binding object a reference to it.
-        binding.sleepQualityViewModel = sleepQualityViewModel
-
-        // Add an Observer to the state variable for Navigating when a Quality icon is tapped.
-        sleepQualityViewModel.navigateToSleepTracker.observe(viewLifecycleOwner, Observer {
-            if (it == true) { // Observed state is true.
-                this.findNavController().navigate(
-                        SleepQualityFragmentDirections.actionSleepQualityFragmentToSleepTrackerFragment())
-                // Reset state to make sure we only navigate once, even if the device
-                // has a configuration change.
-                sleepQualityViewModel.doneNavigating()
-            }
-        })
-
-        return binding.root
-    }
-}
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/detail/DetailFragment.kt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/detail/DetailFragment.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/detail/DetailFragment.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,40 +0,0 @@
-/*
- *  Copyright 2018, The Android Open Source Project
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-
-package com.example.android.marsrealestate.detail
-
-import android.os.Bundle
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.fragment.app.Fragment
-import androidx.lifecycle.ViewModelProvider
-import com.example.android.marsrealestate.databinding.FragmentDetailBinding
-
-/**
- * This [Fragment] will show the detailed information about a selected piece of Mars real estate.
- */
-class DetailFragment : Fragment() {
-    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,
-                              savedInstanceState: Bundle?): View? {
-
-        @Suppress("UNUSED_VARIABLE")
-        val application = requireNotNull(activity).application
-        val binding = FragmentDetailBinding.inflate(inflater)
-        binding.lifecycleOwner = this
-        return binding.root
-    }
-}
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/values/colors.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/values/colors.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/values/colors.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <color name="colorPrimary">#3F51B5</color>
-    <color name="colorPrimaryDark">#303F9F</color>
-    <color name="colorAccent">#FF4081</color>
-</resources>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background"/>
-    <foreground android:drawable="@drawable/ic_launcher_foreground"/>
-</adaptive-icon>
\ No newline at end of file
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_broken_image.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_broken_image.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_broken_image.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,27 +0,0 @@
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:tint="#A9A9AC"
-    android:viewportWidth="24.0"
-    android:viewportHeight="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M21,5v6.59l-3,-3.01 -4,4.01 -4,-4 -4,4 -3,-3.01L3,5c0,-1.1 0.9,-2 2,-2h14c1.1,0 2,0.9 2,2zM18,11.42l3,3.01L21,19c0,1.1 -0.9,2 -2,2L5,21c-1.1,0 -2,-0.9 -2,-2v-6.58l3,2.99 4,-4 4,4 4,-3.99z" />
-</vector>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_launcher_sleep_tracker_background.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_launcher_sleep_tracker_background.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_launcher_sleep_tracker_background.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,55 +0,0 @@
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="108dp"
-        android:height="108dp"
-        android:viewportWidth="512"
-        android:viewportHeight="512">
-  <path
-      android:pathData="M0,369.07h512v142.93h-512z"
-      android:fillColor="#e0e0e0"/>
-  <path
-      android:pathData="M228.55,271.42l15.7,-30.1L225,244.55l-1,-5.78 26.34,-4.41 1,6.22 -15.6,30.07L256,267.26l1,5.79 -27.42,4.59Z"
-      android:fillColor="#757575"/>
-  <path
-      android:pathData="M271.75,215.33l41.52,-29.2 -27.86,-9 2.68,-8.35 38,12.23 -2.89,9 -41.37,29.25 29.28,9.41L308.44,237l-39.58,-12.73Z"
-      android:fillColor="#bdbdbd"/>
-  <path
-      android:pathData="M350,187.18l39.94,-79.32L339.54,117l-2.75,-15.11 68.74,-12.52 3,16.23 -39.67,79.27 52.94,-9.64 2.75,15.1 -71.57,13Z"
-      android:fillColor="#e0e0e0"/>
-  <group>
-    <clip-path android:pathData="M584.94,-624.15h512v512h-512z M 0,0"/>
-    <path
-        android:pathData="M448.55,-187.1,709.34,73.69a8.72,8.72,0,0,0,12.32,0l325.45,-325.45a8.72,8.72,0,0,0,0,-12.32L778,-533.19a18.84,18.84,0,0,0,-26.65,0L442,-241.74l-2.36,5.16A44.05,44.05,0,0,0,448.55,-187.1Z"
-        android:fillColor="#43a047"/>
-    <path
-        android:pathData="M440.25,-208.98l275.52002,275.53l335.0,-335.0l-278.15002,-278.14996l-334.26,328.40997l1.8900146,9.210007z"
-        android:fillColor="#c0ca33"/>
-    <path
-        android:pathData="M544.72,-487.03h393.36v473.76h-393.36z"
-        android:fillColor="#e6ee9c"/>
-    <path
-        android:pathData="M548.74,-506.95H930.26a8.41,8.41,0,0,1,8.41,8.41V-37.68a8.41,8.41,0,0,1,-8.41,8.41H548.74a18.19,18.19,0,0,1,-18.19,-18.19V-488.75A18.19,18.19,0,0,1,548.74,-506.95Z"
-        android:fillColor="#6ab343"/>
-  </group>
-  <group>
-    <clip-path android:pathData="M0,-624.15h512v512h-512z M 0,0"/>
-    <path
-        android:pathData="M246.59,-272.23l39.17,-11.46a3.9,3.9,0,0,0,2.67,-4.84,3.9,3.9,0,0,0,-4.84,-2.63L244,-279.58a134.83,134.83,0,0,0,-30.74,-47.09,134.89,134.89,0,0,0,-47,-30.69l11.49,-39.52a3.86,3.86,0,0,0,-2.63,-4.83,3.85,3.85,0,0,0,-4.83,2.64l-11.42,39.16c-41.3,-13.2,-86.47,-4.85,-117.17,25.89l178.9,178.87c30.72,-30.71,39,-75.79,25.93,-117.08m-211,-54.15L-93.27,-197.48a29.94,29.94,0,0,0,0,42.38l14.43,14.44,-44,44a28.1,28.1,0,0,0,0,39.7,28.12,28.12,0,0,0,39.74,0l44,-44,26.81,26.8,-44,44a28.09,28.09,0,0,0,0,39.7,28.11,28.11,0,0,0,39.74,0l44,-44L41.91,-20A30,30,0,0,0,84.3,-20L213.16,-148.87Zm180.59,90.91L203.59,-248a1.7,1.7,0,0,1,0,-2.4l1.59,-1.6a1.71,1.71,0,0,1,2.41,0l12.58,12.59a1.7,1.7,0,0,1,0,2.4l-1.59,1.59A1.7,1.7,0,0,1,216.17,-235.47Zm-81.43,-81.42,-12.58,-12.59a1.7,1.7,0,0,1,0,-2.4l1.59,-1.59a1.7,1.7,0,0,1,2.41,0l12.58,12.58a1.68,1.68,0,0,1,0,2.4l-1.59,1.6A1.71,1.71,0,0,1,134.74,-316.89Zm-99.16,-9.49L-93.27,-197.48a29.94,29.94,0,0,0,0,42.38l14.43,14.44,-44,44a28.1,28.1,0,0,0,0,39.7,28.12,28.12,0,0,0,39.74,0l44,-44,26.81,26.8,-44,44a28.09,28.09,0,0,0,0,39.7,28.11,28.11,0,0,0,39.74,0l44,-44L41.91,-20A30,30,0,0,0,84.3,-20L213.16,-148.87Z"
-        android:fillColor="#6ab343"/>
-  </group>
-</vector>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/proguard-rules.pro
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/proguard-rules.pro	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/proguard-rules.pro	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,21 +0,0 @@
-# Add project specific ProGuard rules here.
-# You can control the set of applied configuration files using the
-# proguardFiles setting in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
-
-# Uncomment this to preserve the line number information for
-# debugging stack traces.
-#-keepattributes SourceFile,LineNumberTable
-
-# If you keep the line number information, uncomment this to
-# hide the original source file name.
-#-renamesourcefileattribute SourceFile
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background"/>
-    <foreground android:drawable="@drawable/ic_launcher_foreground"/>
-</adaptive-icon>
\ No newline at end of file
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_launcher_foreground.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_launcher_foreground.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_launcher_foreground.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,38 +0,0 @@
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="108dp"
-    android:height="108dp"
-    android:viewportWidth="512"
-    android:viewportHeight="512">
-    <path
-        android:fillColor="#ff5252"
-        android:pathData="M219.78,182.33l-40.58,42.79l0,86.9l88.69,25.4l62.84,-20.6l0,-88.14l-110.95,-46.35z" />
-    <path
-        android:fillColor="#b71c1c"
-        android:pathData="M230.03,264.49l0,52.33l-20.51,-5.18l0,-52.32l20.51,5.17z" />
-    <path
-        android:fillColor="#b71c1c"
-        android:pathData="M337,221.75l-45,-68.81 -72.26,23 -44.85,46.38L174.89,303l8.24,2.11L183.13,228.84l36.8,-38 36.8,56.16v76.28l8.24,2.11 72.26,-23ZM312.27,268.52 L302.27,271.78L302.27,260.47l10,-3.26ZM299.62,261.23v11.31l-10,3.26L289.62,264.49ZM289.47,278.68 L299.47,275.42v11.31l-10,3.25ZM302.31,285.77L302.31,274.46l10,-3.26v11.31Z" />
-    <group>
-        <clip-path android:pathData="M0,-0.23h512v512h-512z M 0,0" />
-        <path
-            android:fillColor="#ff5252"
-            android:pathData="M256.0,697.45m-424.2,0.0a424.2,424.2,0,1,1,848.4,0.0a424.2,424.2,0,1,1,-848.4,0.0" />
-    </group>
-</vector>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepNightAdapter.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepNightAdapter.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepNightAdapter.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,137 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleeptracker
-
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.recyclerview.widget.DiffUtil
-import androidx.recyclerview.widget.ListAdapter
-import androidx.recyclerview.widget.RecyclerView
-import com.example.android.trackmysleepquality.R
-import com.example.android.trackmysleepquality.database.SleepNight
-import com.example.android.trackmysleepquality.databinding.ListItemSleepNightBinding
-import kotlinx.coroutines.CoroutineScope
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.launch
-import kotlinx.coroutines.withContext
-
-private val ITEM_VIEW_TYPE_HEADER = 0
-private val ITEM_VIEW_TYPE_ITEM = 1
-
-class SleepNightAdapter(val clickListener: SleepNightListener) : ListAdapter<DataItem,
-        RecyclerView.ViewHolder>(SleepNightDiffCallback()) {
-
-    private val adapterScope = CoroutineScope(Dispatchers.Default)
-
-    fun addHeaderAndSubmitList(list: List<SleepNight>?) {
-        adapterScope.launch {
-            val items = when (list) {
-                null -> listOf(DataItem.Header)
-                else -> listOf(DataItem.Header) + list.map { DataItem.SleepNightItem(it) }
-            }
-            withContext(Dispatchers.Main) {
-                submitList(items)
-            }
-        }
-    }
-
-    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {
-        when (holder) {
-            is ViewHolder -> {
-                val nightItem = getItem(position) as DataItem.SleepNightItem
-                holder.bind(clickListener, nightItem.sleepNight)
-            }
-        }
-    }
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {
-        return when (viewType) {
-            ITEM_VIEW_TYPE_HEADER -> TextViewHolder.from(parent)
-            ITEM_VIEW_TYPE_ITEM -> ViewHolder.from(parent)
-            else -> throw ClassCastException("Unknown viewType ${viewType}")
-        }
-    }
-
-    class TextViewHolder(view: View): RecyclerView.ViewHolder(view) {
-        companion object {
-            fun from(parent: ViewGroup): TextViewHolder {
-                val layoutInflater = LayoutInflater.from(parent.context)
-                val view = layoutInflater.inflate(R.layout.header, parent, false)
-                return TextViewHolder(view)
-            }
-        }
-    }
-
-    override fun getItemViewType(position: Int): Int {
-        return when (getItem(position)) {
-            is DataItem.Header -> ITEM_VIEW_TYPE_HEADER
-            is DataItem.SleepNightItem -> ITEM_VIEW_TYPE_ITEM
-        }
-    }
-
-    class ViewHolder private constructor(val binding: ListItemSleepNightBinding)
-        : RecyclerView.ViewHolder(binding.root) {
-
-        fun bind(clickListener: SleepNightListener, item: SleepNight) {
-            binding.sleep = item
-            binding.clickListener = clickListener
-            binding.executePendingBindings()
-        }
-
-        companion object {
-            fun from(parent: ViewGroup): ViewHolder {
-                val layoutInflater = LayoutInflater.from(parent.context)
-                val binding = ListItemSleepNightBinding.inflate(layoutInflater, parent, false)
-
-                return ViewHolder(binding)
-            }
-        }
-    }
-}
-
-/**
- * Callback for calculating the diff between two non-null items in a list.
- *
- * Used by ListAdapter to calculate the minumum number of changes between and old list and a new
- * list that's been passed to `submitList`.
- */
-class SleepNightDiffCallback : DiffUtil.ItemCallback<DataItem>() {
-    override fun areItemsTheSame(oldItem: DataItem, newItem: DataItem): Boolean {
-        return oldItem.id == newItem.id
-    }
-
-    override fun areContentsTheSame(oldItem: DataItem, newItem: DataItem): Boolean {
-        return oldItem == newItem
-    }
-}
-
-class SleepNightListener(val clickListener: (sleepId: Long) -> Unit) {
-    fun onClick(night: SleepNight) = clickListener(night.nightId)
-}
-
-sealed class DataItem {
-    data class SleepNightItem(val sleepNight: SleepNight): DataItem() {
-        override val id = sleepNight.nightId
-    }
-
-    object Header: DataItem() {
-        override val id = Long.MIN_VALUE
-    }
-
-    abstract val id: Long
-}
\ No newline at end of file
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/colors.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/colors.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/colors.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-
-    <color name="colorPrimary">#6ab343</color>
-    <color name="colorPrimaryDark">#388310</color>
-    <color name="colorAccent">#6ab343</color>
-
-    <color name="green_color">#388310</color>
-    <color name="white_text_color">#f0f0f0</color>
-
-</resources>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_1.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_1.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_1.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,14 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="500"
-    android:viewportWidth="500" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#6ab343" android:pathData="M181.16,316.18m-181.7,0a181.7,181.7 0,1 1,363.4 0a181.7,181.7 0,1 1,-363.4 0"/>
-    <path android:fillColor="#fff" android:pathData="M80.313,264.221L145.284,269.905A5.49,5.49 50,0 1,150.275 275.853L150.271,275.903A5.49,5.49 50,0 1,144.323 280.893L79.351,275.209A5.49,5.49 50,0 1,74.361 269.261L74.365,269.212A5.49,5.49 50,0 1,80.313 264.221z"/>
-    <path android:fillColor="#fff" android:pathData="M217.037,269.907L282.009,264.223A5.49,5.49 130,0 1,287.956 269.213L287.961,269.263A5.49,5.49 130,0 1,282.97 275.211L217.998,280.895A5.49,5.49 130,0 1,212.051 275.904L212.046,275.855A5.49,5.49 130,0 1,217.037 269.907z"/>
-    <path android:fillColor="#00000000"
-        android:pathData="M92.91,395.3c19.86,-26.3 54.92,-43.94 87.69,-43.94 33.08,0 68.5,18 88.26,44.69"
-        android:strokeColor="#fff" android:strokeLineCap="round" android:strokeWidth="20"/>
-    <path android:fillColor="#eee" android:pathData="M398.31,101.69m-101.69,0a101.69,101.69 0,1 1,203.38 0a101.69,101.69 0,1 1,-203.38 0"/>
-    <path android:fillColor="#eee" android:pathData="M267.86,57.09m-24.76,0a24.76,24.76 0,1 1,49.52 0a24.76,24.76 0,1 1,-49.52 0"/>
-    <path android:fillColor="#eee" android:pathData="M224.93,85.36m-16.33,0a16.33,16.33 0,1 1,32.66 0a16.33,16.33 0,1 1,-32.66 0"/>
-    <path android:fillColor="#eee" android:pathData="M217.77,120.19m-9.17,0a9.17,9.17 0,1 1,18.34 0a9.17,9.17 0,1 1,-18.34 0"/>
-    <path android:fillColor="#6ab343" android:pathData="M400.67,75.13 L385.22,86.38l-9.9,-15.15 30.15,-21.75h14.85v102.6H400.67Z"/>
-</vector>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/README.md
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/README.md	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/README.md	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,106 +0,0 @@
-# RecyclerView - SleepQualityTracker with RecyclerView app
-
-This is the toy app for Lesson 7 of the [Android App Development in Kotlin course on Udacity](https://classroom.udacity.com/courses/ud9012/).
-
-## SleepQualityTracker with RecyclerView
-
-This app builds on the SleepQualityTracker you developed in Lesson 6.  In this lesson you'll learn how to display a list of results in a RecyclerView instead of a static ScrollView. You'll also learn how you can refactor your code to make it more efficient so it will be easier to maintain and test.
-
-## Screenshots
-
-![Screenshot1](screenshots/sleep_tracker_recycler_home.png)
-![Screenshot2](screenshots/sleep_tracker_recycler_detail.png)
-
-## How to use this repo while taking the course
-
-
-Each code repository in this class has a chain of commits that looks like this:
-
-![listofcommits](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58befe2e_listofcommits/listofcommits.png)
-
-These commits show every step you'll take to create the app. Each commit contains instructions for completing the that step.
-
-Each commit also has a **branch** associated with it of the same name as the commit message, as seen below:
-
-![branches](https://d17h27t6h515a5.cloudfront.net/topher/2017/April/590390fe_branches-ud855/branches-ud855.png
-)
-Access all branches from this tab.
-
-![listofbranches](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58befe76_listofbranches/listofbranches.png
-)
-
-
-![branchesdropdown](https://d17h27t6h515a5.cloudfront.net/topher/2017/April/590391a3_branches-dropdown-ud855/branches-dropdown-ud855.png
-)
-
-The branches are also accessible from the drop-down in the "Code" tab.
-
-
-## Working with the Course Code
-
-Here are the basic steps for working with and completing exercises in the repo.
-
-The basic steps are:
-
-1. Clone the repo.
-2. Check out the branch corresponding to the step you want to attempt.
-3. Find and complete the TODOs.
-4. Optionally commit your code changes.
-5. Compare your code with the solution.
-6. Repeat steps 2-5 until you've gone trough all the steps to complete the toy app.
-
-
-**Step 1: Clone the repo**
-
-As you go through the course, you'll be instructed to clone the different exercise repositories, so you don't need to set these up now. You can clone a repository from github in a folder of your choice with the command:
-
-```bash
-git clone https://github.com/udacity/REPOSITORY_NAME.git
-```
-
-**Step 2: Check out the step branch**
-
-As you go through different steps in the code, you'll be told which step you're on, as well as a link to the corresponding branch.
-
-You'll want to check out the branch associated with that step. The command to check out a branch would be:
-
-```bash
-git checkout BRANCH_NAME
-```
-
-**Step 3: Find and complete the TODOs**
-
-Once you've checked out the branch, you'll have the code in the exact state you need. You'll even have TODOs, which are special comments that tell you all the steps you need to complete the exercise. You can easily navigate to all the TODOs using Android Studio's TODO tool. To open the TODO tool, click the button at the bottom of the screen that says TODO. This will display a list of all comments with TODO in the project. 
-
-We've numbered the TODO steps so you can do them in order:
-![todos](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58bf00e7_todos/todos.png
-)
-
-**Step 4: Commit your code changes**
-
-After You've completed the TODOs, you can optionally commit your changes. This will allow you to see the code you wrote whenever you return to the branch. The following git code will add and save **all** your changes.
-
-```bash
-git add .
-git commit -m "Your commit message"
-```
-
-**Step 5: Compare with the solution**
-
-Most exercises will have a list of steps for you to check off in the classroom. Once you've checked these off, you'll see a pop up window with a link to the solution code. Note the **Diff** link:
-
-![solutionwindow](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58bf00f9_solutionwindow/solutionwindow.png
-)
-
-The **Diff** link will take you to a Github diff as seen below:
-![diff](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58bf0108_diffsceenshot/diffsceenshot.png
-)
-
-All of the code that was added in the solution is in green, and the removed code (which will usually be the TODO comments) is in red. 
-
-You can also compare your code locally with the branch of the following step.
-
-## Report Issues
-Notice any issues with a repository? Please file a github issue in the repository.
-
-
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/font/roboto.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/font/roboto.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/font/roboto.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<font-family xmlns:app="http://schemas.android.com/apk/res-auto"
-        app:fontProviderAuthority="com.google.android.gms.fonts"
-        app:fontProviderPackage="com.google.android.gms"
-        app:fontProviderQuery="Roboto"
-        app:fontProviderCerts="@array/com_google_android_gms_fonts_certs">
-</font-family>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/.idea/jarRepositories.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/.idea/jarRepositories.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/.idea/jarRepositories.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RemoteRepositoriesConfiguration">
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Maven Central repository" />
-      <option name="url" value="https://repo1.maven.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="jboss.community" />
-      <option name="name" value="JBoss Community repository" />
-      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="BintrayJCenter" />
-      <option name="name" value="BintrayJCenter" />
-      <option name="url" value="https://jcenter.bintray.com/" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="Google" />
-      <option name="name" value="Google" />
-      <option name="url" value="https://dl.google.com/dl/android/maven2/" />
-    </remote-repository>
-  </component>
-</project>
\ No newline at end of file
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepdetail/SleepDetailFragment.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepdetail/SleepDetailFragment.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepdetail/SleepDetailFragment.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,82 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleepdetail
-
-import android.os.Bundle
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.databinding.DataBindingUtil
-import androidx.fragment.app.Fragment
-import androidx.lifecycle.Observer
-import androidx.lifecycle.ViewModelProvider
-import androidx.navigation.fragment.findNavController
-import com.example.android.trackmysleepquality.R
-import com.example.android.trackmysleepquality.database.SleepDatabase
-import com.example.android.trackmysleepquality.databinding.FragmentSleepDetailBinding
-
-
-/**
- * A simple [Fragment] subclass.
- * Activities that contain this fragment must implement the
- * [SleepDetailFragment.OnFragmentInteractionListener] interface
- * to handle interaction events.
- * Use the [SleepDetailFragment.newInstance] factory method to
- * create an instance of this fragment.
- *
- */
-class SleepDetailFragment : Fragment() {
-
-    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,
-                              savedInstanceState: Bundle?): View? {
-
-        // Get a reference to the binding object and inflate the fragment views.
-        val binding: FragmentSleepDetailBinding = DataBindingUtil.inflate(
-                inflater, R.layout.fragment_sleep_detail, container, false)
-
-        val application = requireNotNull(this.activity).application
-        val arguments = SleepDetailFragmentArgs.fromBundle(arguments!!)
-
-        // Create an instance of the ViewModel Factory.
-        val dataSource = SleepDatabase.getInstance(application).sleepDatabaseDao
-        val viewModelFactory = SleepDetailViewModelFactory(arguments.sleepNightKey, dataSource)
-
-        // Get a reference to the ViewModel associated with this fragment.
-        val sleepDetailViewModel =
-                ViewModelProvider(
-                        this, viewModelFactory).get(SleepDetailViewModel::class.java)
-
-        // To use the View Model with data binding, you have to explicitly
-        // give the binding object a reference to it.
-        binding.sleepDetailViewModel = sleepDetailViewModel
-
-        binding.lifecycleOwner = this
-
-        // Add an Observer to the state variable for Navigating when a Quality icon is tapped.
-        sleepDetailViewModel.navigateToSleepTracker.observe(viewLifecycleOwner, Observer {
-            if (it == true) { // Observed state is true.
-                this.findNavController().navigate(
-                        SleepDetailFragmentDirections.actionSleepDetailFragmentToSleepTrackerFragment())
-                // Reset state to make sure we only navigate once, even if the device
-                // has a configuration change.
-                sleepDetailViewModel.doneNavigating()
-            }
-        })
-
-        return binding.root
-    }
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepTrackerViewModelFactory.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepTrackerViewModelFactory.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepTrackerViewModelFactory.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,40 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleeptracker
-
-import android.app.Application
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.ViewModelProvider
-import com.example.android.trackmysleepquality.database.SleepDatabaseDao
-
-/**
- * This is pretty much boiler plate code for a ViewModel Factory.
- *
- * Provides the SleepDatabaseDao and context to the ViewModel.
- */
-class SleepTrackerViewModelFactory(
-        private val dataSource: SleepDatabaseDao,
-        private val application: Application) : ViewModelProvider.Factory {
-    @Suppress("unchecked_cast")
-    override fun <T : ViewModel?> create(modelClass: Class<T>): T {
-        if (modelClass.isAssignableFrom(SleepTrackerViewModel::class.java)) {
-            return SleepTrackerViewModel(dataSource, application) as T
-        }
-        throw IllegalArgumentException("Unknown ViewModel class")
-    }
-}
-
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_launcher_sleep_tracker_foreground.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_launcher_sleep_tracker_foreground.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_launcher_sleep_tracker_foreground.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,77 +0,0 @@
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="108dp"
-        android:height="108dp"
-        android:viewportWidth="512"
-        android:viewportHeight="512">
-  <path
-      android:pathData="M35.58,297.76l6.18,-7.64l98.76,-8.5l100.14,101.33l-20,86.04l-7.5,6.29l-126.86,-7.63l-50.72,-169.89z"
-      android:fillColor="#fff"/>
-  <path
-      android:pathData="M389,302.51q-28.14,0 -47.68,19.54T321.8,369.73q0,28.15 19.55,48.08T389,437.74q28.14,0 48.08,-19.93T457,369.73q0,-28.14 -19.93,-47.68T389,302.51Z"
-      android:fillColor="#6ab343"/>
-  <path
-      android:pathData="M389.17,326.32a43.23,43.23 0,0 0,-43.55 43.55A42.84,42.84 0,0 0,358.28 401a41.6,41.6 0,0 0,30.89 12.92,44.09 44.09,0 0,0 44.05,-44.06A41.61,41.61 0,0 0,420.31 339,42.91 42.91,0 0,0 389.17,326.32Z"
-      android:fillColor="#f5f5f5"/>
-  <path
-      android:pathData="M389.4,363.79L389.4,340.35"
-      android:strokeLineJoin="round"
-      android:strokeWidth="10"
-      android:fillColor="#00000000"
-      android:strokeColor="#6ab343"
-      android:strokeLineCap="round"/>
-  <path
-      android:pathData="M394.5,373.69L412.12,384.46"
-      android:strokeLineJoin="round"
-      android:strokeWidth="10"
-      android:fillColor="#00000000"
-      android:strokeColor="#6ab343"
-      android:strokeLineCap="round"/>
-  <path
-      android:pathData="M389.39,363.79a6.25,6.25 0,0 0,-6.3 6.3,6.2 6.2,0 0,0 1.83,4.5 6,6 0,0 0,4.47 1.87,6.37 6.37,0 0,0 6.36,-6.37 6,6 0,0 0,-1.86 -4.47A6.21,6.21 0,0 0,389.39 363.79Z"
-      android:strokeWidth="7"
-      android:fillColor="#f5f5f5"
-      android:strokeColor="#6ab343"/>
-  <group>
-    <clip-path android:pathData="M584.94,0h512v512h-512z M 0,0"/>
-    <path
-        android:pathData="M448.55,437.05,709.34,697.84a8.72,8.72,0,0,0,12.32,0l325.45,-325.45a8.72,8.72,0,0,0,0,-12.32L778,91a18.84,18.84,0,0,0,-26.65,0L442,382.4l-2.36,5.16A44.07,44.07,0,0,0,448.55,437.05Z"
-        android:fillColor="#43a047"/>
-    <path
-        android:pathData="M440.25,415.17l275.52002,275.52l335.0,-334.99l-278.15002,-278.15002l-334.26,328.40002l1.8900146,9.220001z"
-        android:fillColor="#c0ca33"/>
-    <path
-        android:pathData="M544.72,137.12h393.36v473.76h-393.36z"
-        android:fillColor="#e6ee9c"/>
-    <path
-        android:pathData="M548.74,117.2H930.26a8.41,8.41,0,0,1,8.41,8.41V586.47a8.41,8.41,0,0,1,-8.41,8.41H548.74a18.19,18.19,0,0,1,-18.19,-18.19V135.4a18.19,18.19,0,0,1,18.19,-18.19Z"
-        android:fillColor="#6ab343"/>
-    <path
-        android:pathData="M601.64,-8.95h13.65v477.68h-13.65z"
-        android:fillColor="#43a047"/>
-    <path
-        android:pathData="M612.29,-1.71h6.82v477.68h-6.82z"
-        android:fillColor="#66bb6a"/>
-  </group>
-  <group>
-    <clip-path android:pathData="M0,0h512v512h-512z M 0,0"/>
-    <path
-        android:pathData="M246.59,351.91l39.17,-11.45a3.89,3.89,0,1,0,-2.17,-7.47L244,344.56a136.82,136.82,0,0,0,-77.69,-77.77l11.49,-39.53a3.89,3.89,0,1,0,-7.46,-2.19l-11.42,39.16c-41.3,-13.19,-86.47,-4.84,-117.17,25.89L220.66,469c30.72,-30.71,39,-75.78,25.93,-117.08m-211,-54.15L-93.27,426.67a29.94,29.94,0,0,0,0,42.38l14.43,14.43,-44,44a28.11,28.11,0,0,0,0,39.71,28.12,28.12,0,0,0,39.74,0l44,-44L-12.31,550l-44,44a28.1,28.1,0,0,0,0,39.71,28.1,28.1,0,0,0,39.74,0l44,-44,14.49,14.47a30,30,0,0,0,42.39,0l128.86,-128.9Zm180.59,90.92L203.59,376.1a1.71,1.71,0,0,1,0,-2.41l1.59,-1.59a1.71,1.71,0,0,1,2.41,0l12.58,12.58a1.71,1.71,0,0,1,0,2.41l-1.59,1.59A1.7,1.7,0,0,1,216.17,388.68Zm-81.43,-81.43,-12.58,-12.58a1.7,1.7,0,0,1,0,-2.4l1.59,-1.6a1.71,1.71,0,0,1,2.41,0l12.58,12.59a1.68,1.68,0,0,1,0,2.4l-1.59,1.59A1.7,1.7,0,0,1,134.74,307.25Zm-99.16,-9.49L-93.27,426.67a29.94,29.94,0,0,0,0,42.38l14.43,14.43,-44,44a28.11,28.11,0,0,0,0,39.71,28.12,28.12,0,0,0,39.74,0l44,-44L-12.31,550l-44,44a28.1,28.1,0,0,0,0,39.71,28.1,28.1,0,0,0,39.74,0l44,-44,14.49,14.47a30,30,0,0,0,42.39,0l128.86,-128.9Z"
-        android:fillColor="#6ab343"/>
-  </group>
-</vector>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/androidTest/java/com/example/android/trackmysleepquality/SleepDatabaseTest.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/androidTest/java/com/example/android/trackmysleepquality/SleepDatabaseTest.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/androidTest/java/com/example/android/trackmysleepquality/SleepDatabaseTest.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,71 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality
-
-import androidx.room.Room
-import androidx.test.ext.junit.runners.AndroidJUnit4
-import androidx.test.platform.app.InstrumentationRegistry
-import com.example.android.trackmysleepquality.database.SleepDatabase
-import com.example.android.trackmysleepquality.database.SleepDatabaseDao
-import com.example.android.trackmysleepquality.database.SleepNight
-import org.junit.Assert.assertEquals
-import org.junit.After
-import org.junit.Before
-import org.junit.Test
-import org.junit.runner.RunWith
-import java.io.IOException
-
-/**
- * This is not meant to be a full set of tests. For simplicity, most of your samples do not
- * include tests. However, when building the Room, it is helpful to make sure it works before
- * adding the UI.
- */
-
-@RunWith(AndroidJUnit4::class)
-class SleepDatabaseTest {
-
-    private lateinit var sleepDao: SleepDatabaseDao
-    private lateinit var db: SleepDatabase
-
-    @Before
-    fun createDb() {
-        val context = InstrumentationRegistry.getInstrumentation().targetContext
-        // Using an in-memory database because the information stored here disappears when the
-        // process is killed.
-        db = Room.inMemoryDatabaseBuilder(context, SleepDatabase::class.java)
-                // Allowing main thread queries, just for testing.
-                .allowMainThreadQueries()
-                .build()
-        sleepDao = db.sleepDatabaseDao
-    }
-
-    @After
-    @Throws(IOException::class)
-    fun closeDb() {
-        db.close()
-    }
-
-    @Test
-    @Throws(Exception::class)
-    fun insertAndGetNight() {
-        val night = SleepNight()
-        sleepDao.insert(night)
-        val tonight = sleepDao.getTonight()
-        assertEquals(tonight?.sleepQuality, -1)
-    }
-}
-
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/header.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/header.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/header.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<TextView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/text"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:textAppearance="?android:attr/textAppearanceLarge"
-    android:text="@string/header_text"
-    android:padding="8dp" />
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepquality/SleepQualityViewModel.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepquality/SleepQualityViewModel.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepquality/SleepQualityViewModel.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,94 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleepquality
-
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.MutableLiveData
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.viewModelScope
-import com.example.android.trackmysleepquality.database.SleepDatabaseDao
-import kotlinx.coroutines.*
-
-/**
- * ViewModel for SleepQualityFragment.
- *
- * @param sleepNightKey The key of the current night we are working on.
- */
-class SleepQualityViewModel(
-        private val sleepNightKey: Long = 0L,
-        val database: SleepDatabaseDao) : ViewModel() {
-
-
-    /**
-     * viewModelJob allows us to cancel all coroutines started by this ViewModel.
-     */
-    private val viewModelJob = Job()
-
-    /**
-     * A [CoroutineScope] keeps track of all coroutines started by this ViewModel.
-     *
-     * Because we pass it [viewModelJob], any coroutine started in this scope can be cancelled
-     * by calling `viewModelJob.cancel()`
-     *
-     * By default, all coroutines started in uiScope will launch in [Dispatchers.Main] which is
-     * the main thread on Android. This is a sensible default because most coroutines started by
-     */
-
-    /**
-     * Variable that tells the fragment whether it should navigate to [SleepTrackerFragment].
-     *
-     * This is `private` because we don't want to expose the ability to set [MutableLiveData] to
-     * the [Fragment]
-     */
-    private val _navigateToSleepTracker = MutableLiveData<Boolean?>()
-
-    /**
-     * When true immediately navigate back to the [SleepTrackerFragment]
-     */
-    val navigateToSleepTracker: LiveData<Boolean?>
-        get() = _navigateToSleepTracker
-
-    /**
-     *
-     */
-
-    /**
-     * Call this immediately after navigating to [SleepTrackerFragment]
-     */
-    fun doneNavigating() {
-        _navigateToSleepTracker.value = null
-    }
-
-    /**
-     * Sets the sleep quality and updates the database.
-     *
-     * Then navigates back to the SleepTrackerFragment.
-     */
-    fun onSetSleepQuality(quality: Int) {
-        viewModelScope.launch {
-            // IO is a thread pool for running operations that access the disk, such as
-            // our Room database.
-                val tonight = database.get(sleepNightKey) ?: return@launch
-                tonight.sleepQuality = quality
-                database.update(tonight)
-
-            // Setting this state variable to true will alert the observer and trigger navigation.
-            _navigateToSleepTracker.value = true
-        }
-    }
-}
-
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/gradlew.bat
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/gradlew.bat	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/gradlew.bat	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,90 +0,0 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/.gitignore
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/.gitignore	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/.gitignore	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,8 +0,0 @@
-*.iml
-.gradle
-/local.properties
-.idea
-.DS_Store
-/build
-/captures
-.externalNativeBuild
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/proguard-rules.pro
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/proguard-rules.pro	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/proguard-rules.pro	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,21 +0,0 @@
-# Add project specific ProGuard rules here.
-# You can control the set of applied configuration files using the
-# proguardFiles setting in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
-
-# Uncomment this to preserve the line number information for
-# debugging stack traces.
-#-keepattributes SourceFile,LineNumberTable
-
-# If you keep the line number information, uncomment this to
-# hide the original source file name.
-#-renamesourcefileattribute SourceFile
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher_sleep_tracker.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher_sleep_tracker.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher_sleep_tracker.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_sleep_tracker_background"/>
-    <foreground android:drawable="@drawable/ic_launcher_sleep_tracker_foreground"/>
-</adaptive-icon>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/database/SleepDatabaseDao.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/database/SleepDatabaseDao.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/database/SleepDatabaseDao.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,79 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.database
-
-import androidx.lifecycle.LiveData
-import androidx.room.Dao
-import androidx.room.Insert
-import androidx.room.Query
-import androidx.room.Update
-
-/**
- * Defines methods for using the SleepNight class with Room.
- */
-@Dao
-interface SleepDatabaseDao {
-
-    @Insert
-    suspend fun insert(night: SleepNight)
-
-    /**
-     * When updating a row with a value already set in a column,
-     * replaces the old value with the new one.
-     *
-     * @param night new value to write
-     */
-    @Update
-    suspend fun update(night: SleepNight)
-
-    /**
-     * Selects and returns the row that matches the supplied start time, which is our key.
-     *
-     * @param key startTimeMilli to match
-     */
-    @Query("SELECT * from daily_sleep_quality_table WHERE nightId = :key")
-    suspend fun get(key: Long): SleepNight?
-
-    /**
-     * Deletes all values from the table.
-     *
-     * This does not delete the table, only its contents.
-     */
-    @Query("DELETE FROM daily_sleep_quality_table")
-    suspend fun clear()
-
-    /**
-     * Selects and returns all rows in the table,
-     *
-     * sorted by start time in descending order.
-     */
-    @Query("SELECT * FROM daily_sleep_quality_table ORDER BY nightId DESC")
-    fun getAllNights(): LiveData<List<SleepNight>>
-
-    /**
-     * Selects and returns the latest night.
-     */
-    @Query("SELECT * FROM daily_sleep_quality_table ORDER BY nightId DESC LIMIT 1")
-    suspend fun getTonight(): SleepNight?
-
-    /**
-     * Selects and returns the night with given nightId.
-     */
-    @Query("SELECT * from daily_sleep_quality_table WHERE nightId = :key")
-    fun getNightWithId(key: Long): LiveData<SleepNight>
-}
-
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/detail/DetailViewModelFactory.kt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/detail/DetailViewModelFactory.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/detail/DetailViewModelFactory.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,37 +0,0 @@
-/*
- *  Copyright 2018, The Android Open Source Project
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-
-package com.example.android.marsrealestate.detail
-
-import android.app.Application
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.ViewModelProvider
-import com.example.android.marsrealestate.network.MarsProperty
-
-/**
- * Simple ViewModel factory that provides the MarsProperty and context to the ViewModel.
- */
-class DetailViewModelFactory(
-        private val marsProperty: MarsProperty,
-        private val application: Application) : ViewModelProvider.Factory {
-    @Suppress("unchecked_cast")
-    override fun <T : ViewModel?> create(modelClass: Class<T>): T {
-        if (modelClass.isAssignableFrom(DetailViewModel::class.java)) {
-            return DetailViewModel(marsProperty, application) as T
-        }
-        throw IllegalArgumentException("Unknown ViewModel class")
-    }
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/settings.gradle
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/settings.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/settings.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,1 +0,0 @@
-include ':app'
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/values/styles.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/values/styles.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/values/styles.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,28 +0,0 @@
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-        <!-- Customize your theme here. -->
-        <item name="colorPrimary">@color/colorPrimary</item>
-        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
-        <item name="colorAccent">@color/colorAccent</item>
-    </style>
-
-</resources>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/menu/overflow_menu.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/menu/overflow_menu.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/menu/overflow_menu.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-    <item
-        android:id="@+id/show_all_menu"
-        android:title="@string/show_all" />
-    <item
-        android:id="@+id/show_rent_menu"
-        android:title="@string/show_rent" />
-    <item
-        android:id="@+id/show_buy_menu"
-        android:title="@string/show_buy" />
-</menu>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_active.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_active.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_active.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,77 +0,0 @@
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="108dp"
-    android:height="108dp"
-    android:viewportWidth="512"
-    android:viewportHeight="512">
-    <path
-        android:pathData="M35.58,297.76l6.18,-7.64l98.76,-8.5l100.14,101.33l-20,86.04l-7.5,6.29l-126.86,-7.63l-50.72,-169.89z"
-        android:fillColor="#fff"/>
-    <path
-        android:pathData="M389,302.51q-28.14,0 -47.68,19.54T321.8,369.73q0,28.15 19.55,48.08T389,437.74q28.14,0 48.08,-19.93T457,369.73q0,-28.14 -19.93,-47.68T389,302.51Z"
-        android:fillColor="#6ab343"/>
-    <path
-        android:pathData="M389.17,326.32a43.23,43.23 0,0 0,-43.55 43.55A42.84,42.84 0,0 0,358.28 401a41.6,41.6 0,0 0,30.89 12.92,44.09 44.09,0 0,0 44.05,-44.06A41.61,41.61 0,0 0,420.31 339,42.91 42.91,0 0,0 389.17,326.32Z"
-        android:fillColor="#f5f5f5"/>
-    <path
-        android:pathData="M389.4,363.79L389.4,340.35"
-        android:strokeLineJoin="round"
-        android:strokeWidth="10"
-        android:fillColor="#00000000"
-        android:strokeColor="#6ab343"
-        android:strokeLineCap="round"/>
-    <path
-        android:pathData="M394.5,373.69L412.12,384.46"
-        android:strokeLineJoin="round"
-        android:strokeWidth="10"
-        android:fillColor="#00000000"
-        android:strokeColor="#6ab343"
-        android:strokeLineCap="round"/>
-    <path
-        android:pathData="M389.39,363.79a6.25,6.25 0,0 0,-6.3 6.3,6.2 6.2,0 0,0 1.83,4.5 6,6 0,0 0,4.47 1.87,6.37 6.37,0 0,0 6.36,-6.37 6,6 0,0 0,-1.86 -4.47A6.21,6.21 0,0 0,389.39 363.79Z"
-        android:strokeWidth="7"
-        android:fillColor="#f5f5f5"
-        android:strokeColor="#6ab343"/>
-    <group>
-        <clip-path android:pathData="M584.94,0h512v512h-512z M 0,0"/>
-        <path
-            android:pathData="M448.55,437.05,709.34,697.84a8.72,8.72,0,0,0,12.32,0l325.45,-325.45a8.72,8.72,0,0,0,0,-12.32L778,91a18.84,18.84,0,0,0,-26.65,0L442,382.4l-2.36,5.16A44.07,44.07,0,0,0,448.55,437.05Z"
-            android:fillColor="#43a047"/>
-        <path
-            android:pathData="M440.25,415.17l275.52002,275.52l335.0,-334.99l-278.15002,-278.15002l-334.26,328.40002l1.8900146,9.220001z"
-            android:fillColor="#c0ca33"/>
-        <path
-            android:pathData="M544.72,137.12h393.36v473.76h-393.36z"
-            android:fillColor="#e6ee9c"/>
-        <path
-            android:pathData="M548.74,117.2H930.26a8.41,8.41,0,0,1,8.41,8.41V586.47a8.41,8.41,0,0,1,-8.41,8.41H548.74a18.19,18.19,0,0,1,-18.19,-18.19V135.4a18.19,18.19,0,0,1,18.19,-18.19Z"
-            android:fillColor="#6ab343"/>
-        <path
-            android:pathData="M601.64,-8.95h13.65v477.68h-13.65z"
-            android:fillColor="#43a047"/>
-        <path
-            android:pathData="M612.29,-1.71h6.82v477.68h-6.82z"
-            android:fillColor="#66bb6a"/>
-    </group>
-    <group>
-        <clip-path android:pathData="M0,0h512v512h-512z M 0,0"/>
-        <path
-            android:pathData="M246.59,351.91l39.17,-11.45a3.89,3.89,0,1,0,-2.17,-7.47L244,344.56a136.82,136.82,0,0,0,-77.69,-77.77l11.49,-39.53a3.89,3.89,0,1,0,-7.46,-2.19l-11.42,39.16c-41.3,-13.19,-86.47,-4.84,-117.17,25.89L220.66,469c30.72,-30.71,39,-75.78,25.93,-117.08m-211,-54.15L-93.27,426.67a29.94,29.94,0,0,0,0,42.38l14.43,14.43,-44,44a28.11,28.11,0,0,0,0,39.71,28.12,28.12,0,0,0,39.74,0l44,-44L-12.31,550l-44,44a28.1,28.1,0,0,0,0,39.71,28.1,28.1,0,0,0,39.74,0l44,-44,14.49,14.47a30,30,0,0,0,42.39,0l128.86,-128.9Zm180.59,90.92L203.59,376.1a1.71,1.71,0,0,1,0,-2.41l1.59,-1.59a1.71,1.71,0,0,1,2.41,0l12.58,12.58a1.71,1.71,0,0,1,0,2.41l-1.59,1.59A1.7,1.7,0,0,1,216.17,388.68Zm-81.43,-81.43,-12.58,-12.58a1.7,1.7,0,0,1,0,-2.4l1.59,-1.6a1.71,1.71,0,0,1,2.41,0l12.58,12.59a1.68,1.68,0,0,1,0,2.4l-1.59,1.59A1.7,1.7,0,0,1,134.74,307.25Zm-99.16,-9.49L-93.27,426.67a29.94,29.94,0,0,0,0,42.38l14.43,14.43,-44,44a28.11,28.11,0,0,0,0,39.71,28.12,28.12,0,0,0,39.74,0l44,-44L-12.31,550l-44,44a28.1,28.1,0,0,0,0,39.71,28.1,28.1,0,0,0,39.74,0l44,-44,14.49,14.47a30,30,0,0,0,42.39,0l128.86,-128.9Z"
-            android:fillColor="#6ab343"/>
-    </group>
-</vector>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/.gitignore
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/.gitignore	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/.gitignore	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,1 +0,0 @@
-/build
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/overview/OverviewViewModel.kt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/overview/OverviewViewModel.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/overview/OverviewViewModel.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,81 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.android.marsrealestate.overview
-
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.MutableLiveData
-import androidx.lifecycle.ViewModel
-import com.example.android.marsrealestate.network.MarsApi
-import com.example.android.marsrealestate.network.MarsProperty
-//import kotlinx.coroutines.CoroutineScope
-//import kotlinx.coroutines.Dispatchers
-import androidx.lifecycle.viewModelScope
-import kotlinx.coroutines.launch
-
-/**
- * The [ViewModel] that is attached to the [OverviewFragment].
- */
-class OverviewViewModel : ViewModel() {
-
-    // The internal MutableLiveData String that stores the most recent response status
-    private val _status = MutableLiveData<String>()
-
-    // The external immutable LiveData for the status String
-    val status: LiveData<String>
-        get() = _status
-
-    // TODO (02) Update the ViewModel to return a LiveData of List<MarsProperty>
-    // Internally, we use a MutableLiveData, because we will be updating the MarsProperty with
-    // new values
-    private val _property = MutableLiveData<MarsProperty>()
-
-    // The external LiveData interface to the property is immutable, so only this class can modify
-    val property: LiveData<MarsProperty>
-        get() = _property
-
-
-
-    /**
-     * Call getMarsRealEstateProperties() on init so we can display status immediately.
-     */
-    init {
-        getMarsRealEstateProperties()
-    }
-
-    /**
-     * Gets Mars real estate property information from the Mars API Retrofit service and updates the
-     * [MarsProperty] [LiveData]. The Retrofit service returns a coroutine Deferred, which we await
-     * to get the result of the transaction.
-     */
-    private fun getMarsRealEstateProperties() {
-        viewModelScope.launch {
-            try {
-                var listResult = MarsApi.retrofitService.getProperties()
-                _status.value = "Success: ${listResult.size} Mars properties retrieved"
-                if (listResult.size > 0) {
-                    _property.value = listResult[0]
-                }
-            } catch (e: Exception) {
-                _status.value = "Failure: ${e.message}"
-            }
-        }
-    }
-
-    /**
-     */
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/MainActivity.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/MainActivity.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/MainActivity.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,52 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality
-
-import android.os.Bundle
-import androidx.appcompat.app.AppCompatActivity
-
-
-/**
- * This is the toy app for lesson 6 of the
- * Android App Development in Kotlin course on Udacity(https://www.udacity.com/course/???).
- *
- * The SleepQualityTracker app is a demo app that helps you collect information about your sleep.
- * - Start time, end time, quality, and time slept
- *
- * This app demonstrates the following views and techniques:
- * - Room database, DAO, and Coroutines
- *
- * It also uses and builds on the following techniques from previous lessons:
- * - Transformation map
- * - Data Binding in XML files
- * - ViewModel Factory
- * - Using Backing Properties to protect MutableLiveData
- * - Observable state LiveData variables to trigger navigation
- */
-
-/**
- * This main activity is just a container for our fragments,
- * where the real action is.
- */
-class MainActivity : AppCompatActivity() {
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-
-        setContentView(R.layout.activity_main)
-    }
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/gradle/wrapper/gradle-wrapper.properties
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/gradle/wrapper/gradle-wrapper.properties	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/gradle/wrapper/gradle-wrapper.properties	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,6 +0,0 @@
-#Tue Aug 11 17:39:48 PDT 2020
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/AndroidManifest.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/AndroidManifest.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/AndroidManifest.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.android.marsrealestate">
-
-    <!-- In order for our app to access the Internet, we need to define this permission. -->
-    <uses-permission android:name="android.permission.INTERNET" />
-
-    <application
-        android:allowBackup="true"
-        android:icon="@mipmap/ic_launcher"
-        android:label="@string/app_name"
-        android:roundIcon="@mipmap/ic_launcher_round"
-        android:supportsRtl="true"
-        android:theme="@style/AppTheme">
-        <activity android:name="com.example.android.marsrealestate.MainActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-    </application>
-
-</manifest>
\ No newline at end of file
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/BindingUtils.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/BindingUtils.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/BindingUtils.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,54 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleeptracker
-
-import android.widget.ImageView
-import android.widget.TextView
-import androidx.databinding.BindingAdapter
-import com.example.android.trackmysleepquality.R
-import com.example.android.trackmysleepquality.convertDurationToFormatted
-import com.example.android.trackmysleepquality.convertNumericQualityToString
-import com.example.android.trackmysleepquality.database.SleepNight
-
-@BindingAdapter("sleepImage")
-fun ImageView.setSleepImage(item: SleepNight?) {
-    item?.let {
-        setImageResource(when (item.sleepQuality) {
-            0 -> R.drawable.ic_sleep_0
-            1 -> R.drawable.ic_sleep_1
-            2 -> R.drawable.ic_sleep_2
-            3 -> R.drawable.ic_sleep_3
-            4 -> R.drawable.ic_sleep_4
-            5 -> R.drawable.ic_sleep_5
-            else -> R.drawable.ic_sleep_active
-        })
-    }
-}
-
-@BindingAdapter("sleepDurationFormatted")
-fun TextView.setSleepDurationFormatted(item: SleepNight?) {
-    item?.let {
-        text = convertDurationToFormatted(item.startTimeMilli, item.endTimeMilli, context.resources)
-    }
-}
-
-@BindingAdapter("sleepQualityString")
-fun TextView.setSleepQualityString(item: SleepNight?) {
-    item?.let {
-        text = convertNumericQualityToString(item.sleepQuality, context.resources)
-    }
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/preloaded_fonts.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/preloaded_fonts.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/preloaded_fonts.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <array name="preloaded_fonts" translatable="false">
-        <item>@font/roboto</item>
-    </array>
-</resources>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/network/MarsProperty.kt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/network/MarsProperty.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/network/MarsProperty.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,32 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.android.marsrealestate.network
-
-import com.squareup.moshi.Json
-
-/**
- * This data class defines a Mars property which includes an ID, the image URL, the type (sale
- * or rental) and the price (monthly if it's a rental).
- * The property names of this data class are used by Moshi to match the names of values in JSON.
- */
-data class MarsProperty(
-        val id: String,
-        // used to map img_src from the JSON to imgSrcUrl in our class
-        @Json(name = "img_src") val imgSrcUrl: String,
-        val type: String,
-        val price: Double)
\ No newline at end of file
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_connection_error.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_connection_error.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_connection_error.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,27 +0,0 @@
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="100dp"
-    android:height="100dp"
-    android:tint="#A9A9AC"
-    android:viewportWidth="24.0"
-    android:viewportHeight="24.0">
-    <path
-        android:fillColor="#A9A9AC"
-        android:pathData="M19.35,10.04C18.67,6.59 15.64,4 12,4c-1.48,0 -2.85,0.43 -4.01,1.17l1.46,1.46C10.21,6.23 11.08,6 12,6c3.04,0 5.5,2.46 5.5,5.5v0.5H19c1.66,0 3,1.34 3,3 0,1.13 -0.64,2.11 -1.56,2.62l1.45,1.45C23.16,18.16 24,16.68 24,15c0,-2.64 -2.05,-4.78 -4.65,-4.96zM3,5.27l2.75,2.74C2.56,8.15 0,10.77 0,14c0,3.31 2.69,6 6,6h11.73l2,2L21,20.73 4.27,4 3,5.27zM7.73,10l8,8H6c-2.21,0 -4,-1.79 -4,-4s1.79,-4 4,-4h1.73z" />
-</vector>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/fragment_overview.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/fragment_overview.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/fragment_overview.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,47 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <data>
-        <variable
-            name="viewModel"
-            type="com.example.android.marsrealestate.overview.OverviewViewModel" />
-    </data>
-
-    <androidx.constraintlayout.widget.ConstraintLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        tools:context="com.example.android.marsrealestate.MainActivity">
-        <!-- TODO (05) Replace the TextView with a RecyclerView -->
-        <!-- TODO (11) Add app:listData = "@viewModel.properties" to bind the listData -->
-        <!-- TODO (13) Add android:clipToPadding = false -->
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@{viewModel.property.imgSrcUrl}"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintLeft_toLeftOf="parent"
-            app:layout_constraintRight_toRightOf="parent"
-            app:layout_constraintTop_toTopOf="parent" />
-
-    </androidx.constraintlayout.widget.ConstraintLayout>
-</layout>
\ No newline at end of file
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/list_item_sleep_night.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/list_item_sleep_night.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/list_item_sleep_night.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <data>
-
-        <variable
-            name="sleep"
-            type="com.example.android.trackmysleepquality.database.SleepNight" />
-
-        <variable
-            name="clickListener"
-            type="com.example.android.trackmysleepquality.sleeptracker.SleepNightListener" />
-    </data>
-
-    <androidx.constraintlayout.widget.ConstraintLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:onClick="@{() -> clickListener.onClick(sleep)}">
-
-        <ImageView
-            android:id="@+id/quality_image"
-            android:layout_width="@dimen/icon_size"
-            android:layout_height="60dp"
-            android:layout_marginStart="16dp"
-            android:layout_marginTop="8dp"
-            android:layout_marginBottom="8dp"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toTopOf="parent"
-            app:sleepImage="@{sleep}"
-            tools:srcCompat="@drawable/ic_sleep_5" />
-
-        <TextView
-            android:id="@+id/quality_string"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="8dp"
-            app:layout_constraintEnd_toEndOf="@+id/quality_image"
-            app:layout_constraintStart_toStartOf="@+id/quality_image"
-            app:layout_constraintTop_toBottomOf="@+id/quality_image"
-            app:sleepQualityString="@{sleep}" />
-
-    </androidx.constraintlayout.widget.ConstraintLayout>
-</layout>
\ No newline at end of file
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_sleep_tracker_background" />
-    <foreground android:drawable="@drawable/ic_launcher_sleep_tracker_foreground" />
-</adaptive-icon>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/gradle/wrapper/gradle-wrapper.properties
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/gradle/wrapper/gradle-wrapper.properties	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/gradle/wrapper/gradle-wrapper.properties	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,23 +0,0 @@
-#
-#  Copyright 2018, The Android Open Source Project
-#
-#  Licensed under the Apache License, Version 2.0 (the "License");
-#  you may not use this file except in compliance with the License.
-#  You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-#  Unless required by applicable law or agreed to in writing, software
-#  distributed under the License is distributed on an "AS IS" BASIS,
-#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-#  See the License for the specific language governing permissions and
-#  limitations under the License.
-#
-
-#Tue Aug 11 17:39:48 PDT 2020
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
-android.databinding.enableV2=true
-zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/database/SleepNight.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/database/SleepNight.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/database/SleepNight.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,36 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.database
-
-import androidx.room.ColumnInfo
-import androidx.room.Entity
-import androidx.room.PrimaryKey
-
-@Entity(tableName = "daily_sleep_quality_table")
-data class SleepNight(
-        @PrimaryKey(autoGenerate = true)
-        var nightId: Long = 0L,
-
-        @ColumnInfo(name = "start_time_milli")
-        val startTimeMilli: Long = System.currentTimeMillis(),
-
-        @ColumnInfo(name = "end_time_milli")
-        var endTimeMilli: Long = startTimeMilli,
-
-        @ColumnInfo(name = "quality_rating")
-        var sleepQuality: Int = -1
-)
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/AndroidManifest.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/AndroidManifest.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/AndroidManifest.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.android.trackmysleepquality">
-
-    <application
-        android:allowBackup="true"
-        android:icon="@mipmap/ic_launcher_sleep_tracker"
-        android:label="@string/app_name"
-        android:roundIcon="@mipmap/ic_launcher_sleep_tracker_round"
-        android:supportsRtl="true"
-        android:theme="@style/AppTheme">
-        <activity android:name=".MainActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        <meta-data
-            android:name="preloaded_fonts"
-            android:resource="@array/preloaded_fonts" />
-    </application>
-
-</manifest>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_0.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_0.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_0.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,12 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="500"
-    android:viewportWidth="500" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#6ab343" android:pathData="M181.16,316.18m-181.7,0a181.7,181.7 0,1 1,363.4 0a181.7,181.7 0,1 1,-363.4 0"/>
-    <path android:fillColor="#fff" android:pathData="M81.158,261.465L145.387,272.79A5.49,5.49 55,0 1,149.84 279.15L149.832,279.199A5.49,5.49 55,0 1,143.472 283.652L79.243,272.327A5.49,5.49 55,0 1,74.789 265.967L74.798,265.918A5.49,5.49 55,0 1,81.158 261.465z"/>
-    <path android:fillColor="#fff" android:pathData="M214.909,272.293L278.825,261.206A5.461,5.461 125.159,0 1,285.138 265.652L285.147,265.701A5.461,5.461 125.159,0 1,280.7 272.015L216.784,283.102A5.461,5.461 125.159,0 1,210.471 278.655L210.462,278.606A5.461,5.461 125.159,0 1,214.909 272.293z"/>
-    <path android:fillColor="#fff" android:pathData="M87.58,410.05a9.55,9.55 0,0 1,-9.41 -11.11c7.36,-44.12 57.39,-78.27 103,-78.27s95.63,34.15 103,78.27a9.55,9.55 0,0 1,-9.41 11.11Z"/>
-    <path android:fillColor="#eee" android:pathData="M398.31,101.69m-101.69,0a101.69,101.69 0,1 1,203.38 0a101.69,101.69 0,1 1,-203.38 0"/>
-    <path android:fillColor="#eee" android:pathData="M267.86,57.09m-24.76,0a24.76,24.76 0,1 1,49.52 0a24.76,24.76 0,1 1,-49.52 0"/>
-    <path android:fillColor="#eee" android:pathData="M224.93,85.36m-16.33,0a16.33,16.33 0,1 1,32.66 0a16.33,16.33 0,1 1,-32.66 0"/>
-    <path android:fillColor="#eee" android:pathData="M217.77,120.19m-9.17,0a9.17,9.17 0,1 1,18.34 0a9.17,9.17 0,1 1,-18.34 0"/>
-    <path android:fillColor="#6ab343" android:pathData="M377.25,147.51a45.14,45.14 0,0 1,-15.08 -19.2,68.28 68.28,0 0,1 -5.32,-27.53 68.23,68.23 0,0 1,5.32 -27.52,45.14 45.14,0 0,1 15.08,-19.2 40.24,40.24 0,0 1,45.3 0,45.12 45.12,0 0,1 15.07,19.2A68.23,68.23 0,0 1,443 100.78a68.28,68.28 0,0 1,-5.33 27.53,45.12 45.12,0 0,1 -15.07,19.2 40.29,40.29 0,0 1,-45.3 0ZM412.42,131.51a28.4,28.4 0,0 0,8.1 -12.6,55.08 55.08,0 0,0 2.78,-18.08q0,-15.59 -6.3,-25.42t-17.1,-9.83q-10.65,0 -16.95,9.9t-6.3,25.35a55.09,55.09 0,0 0,2.77 18.08,28.4 28.4,0 0,0 8.1,12.6 19.24,19.24 0,0 0,24.9 0Z"/>
-</vector>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/build.gradle
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/build.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/build.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,59 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-// Top-level build file where you can add configuration options common to all sub-projects/modules.
-
-buildscript {
-
-    ext {
-        version_core = "1.3.1"
-        version_coroutine = "1.3.7"
-        version_navigation = '1.0.0'
-        version_constraint_layout = "2.0.0-rc1"
-        version_gradle = '4.0.1'
-        version_kotlin = "1.3.72"
-        version_lifecycle_extensions = "2.2.0"
-        version_lifecycle = "2.2.0"
-        version_room = "2.2.5"
-        version_appcompat = "1.2.0"
-        version_fragment = "1.0.0"
-    }
-
-    repositories {
-        google()
-        jcenter()
-    }
-
-    dependencies {
-        classpath "com.android.tools.build:gradle:$version_gradle"
-        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
-        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:$version_navigation"
-
-        // NOTE: Do not place your application dependencies here; they belong
-        // in the individual module build.gradle files
-    }
-}
-
-allprojects {
-    repositories {
-        google()
-        jcenter()
-    }
-}
-
-task clean(type: Delete) {
-    delete rootProject.buildDir
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/.gitignore
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/.gitignore	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/.gitignore	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,1 +0,0 @@
-/build
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/fragment_sleep_quality.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/fragment_sleep_quality.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/fragment_sleep_quality.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,130 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<!-- Wrapping the layout into /layout to make it available with data binding. -->
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <!-- Data to make available to the XML via data binding. In this case,
-     the whole ViewModel, so that we can access the LiveData,
-     click handlers, and state variables. -->
-    <data>
-
-        <variable
-            name="sleepQualityViewModel"
-            type="com.example.android.trackmysleepquality.sleepquality.SleepQualityViewModel" />
-    </data>
-
-    <!-- Start of the visible fragment layout using ConstraintLayout -->
-    <androidx.constraintlayout.widget.ConstraintLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        tools:context=".sleepquality.SleepQualityFragment">
-
-        <TextView
-            android:id="@+id/title_text"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginStart="@dimen/margin"
-            android:layout_marginTop="@dimen/margin"
-            android:layout_marginBottom="@dimen/triple_margin"
-            android:fontFamily="@font/roboto"
-            android:text="@string/how_was_hour_sleep"
-            android:textSize="@dimen/title_text_size"
-            app:layout_constraintBottom_toTopOf="@+id/quality_zero_image"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toTopOf="parent" />
-
-        <ImageView
-            android:id="@+id/quality_zero_image"
-            android:layout_width="@dimen/icon_size"
-            android:layout_height="@dimen/icon_size"
-            android:layout_marginStart="@dimen/margin"
-            android:layout_marginTop="@dimen/margin"
-            android:contentDescription="@string/quality_0"
-            android:onClick="@{() -> sleepQualityViewModel.onSetSleepQuality(0)}"
-            app:layout_constraintEnd_toStartOf="@+id/quality_one_image"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@+id/title_text"
-            app:srcCompat="@drawable/ic_sleep_0" />
-
-        <ImageView
-            android:id="@+id/quality_one_image"
-            android:layout_width="@dimen/icon_size"
-            android:layout_height="@dimen/icon_size"
-            android:contentDescription="@string/quality_1"
-            android:onClick="@{() -> sleepQualityViewModel.onSetSleepQuality(1)}"
-            app:layout_constraintBottom_toBottomOf="@+id/quality_zero_image"
-            app:layout_constraintEnd_toStartOf="@+id/quality_two_image"
-            app:layout_constraintStart_toEndOf="@+id/quality_zero_image"
-            app:srcCompat="@drawable/ic_sleep_1" />
-
-        <ImageView
-            android:id="@+id/quality_two_image"
-            android:layout_width="@dimen/icon_size"
-            android:layout_height="@dimen/icon_size"
-            android:layout_marginEnd="@dimen/margin"
-            android:contentDescription="@string/quality_2"
-            android:onClick="@{() -> sleepQualityViewModel.onSetSleepQuality(2)}"
-            app:layout_constraintBottom_toBottomOf="@+id/quality_one_image"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toEndOf="@+id/quality_one_image"
-            app:srcCompat="@drawable/ic_sleep_2" />
-
-        <ImageView
-            android:id="@+id/quality_three_image"
-            android:layout_width="@dimen/icon_size"
-            android:layout_height="@dimen/icon_size"
-            android:layout_marginStart="@dimen/margin"
-            android:layout_marginTop="@dimen/margin"
-            android:layout_marginBottom="@dimen/margin"
-            android:contentDescription="@string/quality_3"
-            android:onClick="@{() -> sleepQualityViewModel.onSetSleepQuality(3)}"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintEnd_toStartOf="@+id/quality_four_image"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@+id/quality_zero_image"
-            app:layout_constraintVertical_bias="0.0"
-            app:srcCompat="@drawable/ic_sleep_3" />
-
-        <ImageView
-            android:id="@+id/quality_four_image"
-            android:layout_width="@dimen/icon_size"
-            android:layout_height="@dimen/icon_size"
-            android:contentDescription="@string/quality_4"
-            android:onClick="@{() -> sleepQualityViewModel.onSetSleepQuality(4)}"
-            app:layout_constraintBottom_toBottomOf="@+id/quality_three_image"
-            app:layout_constraintEnd_toStartOf="@+id/quality_five_image"
-            app:layout_constraintStart_toEndOf="@+id/quality_three_image"
-            app:layout_constraintTop_toTopOf="@+id/quality_three_image"
-            app:srcCompat="@drawable/ic_sleep_4" />
-
-        <ImageView
-            android:id="@+id/quality_five_image"
-            android:layout_width="@dimen/icon_size"
-            android:layout_height="@dimen/icon_size"
-            android:layout_marginEnd="@dimen/margin"
-            android:contentDescription="@string/quality_5"
-            android:onClick="@{() -> sleepQualityViewModel.onSetSleepQuality(5)}"
-            app:layout_constraintBottom_toBottomOf="@+id/quality_four_image"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toEndOf="@+id/quality_four_image"
-            app:layout_constraintTop_toTopOf="@+id/quality_four_image"
-            app:srcCompat="@drawable/ic_sleep_5" />
-
-    </androidx.constraintlayout.widget.ConstraintLayout>
-</layout>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/detail/DetailViewModel.kt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/detail/DetailViewModel.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/detail/DetailViewModel.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,29 +0,0 @@
-/*
- *  Copyright 2018, The Android Open Source Project
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-
-package com.example.android.marsrealestate.detail
-
-import android.app.Application
-import androidx.lifecycle.AndroidViewModel
-import androidx.lifecycle.ViewModel
-import com.example.android.marsrealestate.detail.DetailFragment
-import com.example.android.marsrealestate.network.MarsProperty
-
-/**
- * The [ViewModel] that is associated with the [DetailFragment].
- */
-class DetailViewModel(@Suppress("UNUSED_PARAMETER")marsProperty: MarsProperty, app: Application) : AndroidViewModel(app) {
-}
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/settings.gradle
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/settings.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/settings.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,18 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-include ':app'
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepquality/SleepQualityViewModelFactory.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepquality/SleepQualityViewModelFactory.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepquality/SleepQualityViewModelFactory.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,38 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleepquality
-
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.ViewModelProvider
-import com.example.android.trackmysleepquality.database.SleepDatabaseDao
-
-/**
- * This is pretty much boiler plate code for a ViewModel Factory.
- *
- * Provides the key for the night and the SleepDatabaseDao to the ViewModel.
- */
-class SleepQualityViewModelFactory(
-        private val sleepNightKey: Long,
-        private val dataSource: SleepDatabaseDao) : ViewModelProvider.Factory {
-    @Suppress("unchecked_cast")
-    override fun <T : ViewModel?> create(modelClass: Class<T>): T {
-        if (modelClass.isAssignableFrom(SleepQualityViewModel::class.java)) {
-            return SleepQualityViewModel(sleepNightKey, dataSource) as T
-        }
-        throw IllegalArgumentException("Unknown ViewModel class")
-    }
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepTrackerFragment.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepTrackerFragment.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepTrackerFragment.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,135 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleeptracker
-
-import android.os.Bundle
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.databinding.DataBindingUtil
-import androidx.fragment.app.Fragment
-import androidx.lifecycle.Observer
-import androidx.lifecycle.ViewModelProvider
-import androidx.navigation.fragment.findNavController
-import androidx.recyclerview.widget.GridLayoutManager
-import com.example.android.trackmysleepquality.R
-import com.example.android.trackmysleepquality.database.SleepDatabase
-import com.example.android.trackmysleepquality.databinding.FragmentSleepTrackerBinding
-import com.google.android.material.snackbar.Snackbar
-
-/**
- * A fragment with buttons to record start and end times for sleep, which are saved in
- * a database. Cumulative data is displayed in a simple scrollable TextView.
- * (Because we have not learned about RecyclerView yet.)
- */
-class SleepTrackerFragment : Fragment() {
-
-    /**
-     * Called when the Fragment is ready to display content to the screen.
-     *
-     * This function uses DataBindingUtil to inflate R.layout.fragment_sleep_quality.
-     */
-    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,
-                              savedInstanceState: Bundle?): View? {
-
-        // Get a reference to the binding object and inflate the fragment views.
-        val binding: FragmentSleepTrackerBinding = DataBindingUtil.inflate(
-                inflater, R.layout.fragment_sleep_tracker, container, false)
-
-        val application = requireNotNull(this.activity).application
-
-        val dataSource = SleepDatabase.getInstance(application).sleepDatabaseDao
-
-        val viewModelFactory = SleepTrackerViewModelFactory(dataSource, application)
-
-        val sleepTrackerViewModel =
-                ViewModelProvider(
-                        this, viewModelFactory).get(SleepTrackerViewModel::class.java)
-
-        binding.sleepTrackerViewModel = sleepTrackerViewModel
-
-        binding.lifecycleOwner = this
-
-        // Add an Observer on the state variable for showing a Snackbar message
-        // when the CLEAR button is pressed.
-        sleepTrackerViewModel.showSnackBarEvent.observe(viewLifecycleOwner, Observer {
-            if (it == true) { // Observed state is true.
-                Snackbar.make(
-                        requireActivity().findViewById(android.R.id.content),
-                        getString(R.string.cleared_message),
-                        Snackbar.LENGTH_SHORT // How long to display the message.
-                ).show()
-                // Reset state to make sure the snackbar is only shown once, even if the device
-                // has a configuration change.
-                sleepTrackerViewModel.doneShowingSnackbar()
-            }
-        })
-
-        // Add an Observer on the state variable for Navigating when STOP button is pressed.
-        sleepTrackerViewModel.navigateToSleepQuality.observe(viewLifecycleOwner, Observer { night ->
-            night?.let {
-                // We need to get the navController from this, because button is not ready, and it
-                // just has to be a view. For some reason, this only matters if we hit stop again
-                // after using the back button, not if we hit stop and choose a quality.
-                // Also, in the Navigation Editor, for Quality -> Tracker, check "Inclusive" for
-                // popping the stack to get the correct behavior if we press stop multiple times
-                // followed by back.
-                // Also: https://stackoverflow.com/questions/28929637/difference-and-uses-of-oncreate-oncreateview-and-onactivitycreated-in-fra
-                this.findNavController().navigate(
-                        SleepTrackerFragmentDirections
-                                .actionSleepTrackerFragmentToSleepQualityFragment(night.nightId))
-                // Reset state to make sure we only navigate once, even if the device
-                // has a configuration change.
-                sleepTrackerViewModel.doneNavigating()
-            }
-        })
-
-        sleepTrackerViewModel.navigateToSleepDataQuality.observe(viewLifecycleOwner, Observer { night ->
-            night?.let {
-
-                this.findNavController().navigate(
-                        SleepTrackerFragmentDirections
-                                .actionSleepTrackerFragmentToSleepDetailFragment(night))
-                sleepTrackerViewModel.onSleepDataQualityNavigated()
-            }
-        })
-
-        val manager = GridLayoutManager(activity, 3)
-        binding.sleepList.layoutManager = manager
-
-        manager.spanSizeLookup = object : GridLayoutManager.SpanSizeLookup() {
-            override fun getSpanSize(position: Int) =  when (position) {
-                0 -> 3
-                else -> 1
-            }
-        }
-
-        val adapter = SleepNightAdapter(SleepNightListener { nightId ->
-            sleepTrackerViewModel.onSleepNightClicked(nightId)
-        })
-
-        binding.sleepList.adapter = adapter
-
-        sleepTrackerViewModel.nights.observe(viewLifecycleOwner, Observer {
-            it?.let {
-                adapter.addHeaderAndSubmitList(it)
-            }
-        })
-
-        return binding.root
-    }
-}
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/build.gradle
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/build.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/build.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,97 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.application'
-apply plugin: 'kotlin-android'
-apply plugin: 'kotlin-android-extensions'
-apply plugin: 'kotlin-kapt'
-apply plugin: "androidx.navigation.safeargs"
-
-android {
-    compileSdkVersion 30
-    buildFeatures {
-        dataBinding true
-    }
-    defaultConfig {
-        applicationId "com.example.android.marsrealestate"
-        minSdkVersion 19
-        targetSdkVersion 30
-        versionCode 1
-        versionName "1.0"  
-    }
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
-    }
-    compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
-
-    kotlinOptions {
-        jvmTarget = JavaVersion.VERSION_1_8.toString()
-    }
-}
-
-dependencies {
-    implementation fileTree(dir: 'libs', include: ['*.jar'])
-
-    // Kotlin
-    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"
-    implementation "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"
-
-    // Constraint Layout
-    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"
-
-    // ViewModel and LiveData
-    // implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"
-    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
-
-    // Navigation
-    implementation "android.arch.navigation:navigation-fragment-ktx:$version_navigation"
-    implementation "android.arch.navigation:navigation-ui-ktx:$version_navigation"
-
-    // Core with Ktx
-    implementation "androidx.core:core-ktx:$version_core"
-
-    // Moshi
-    implementation "com.squareup.moshi:moshi:$version_moshi"
-    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"
-
-    
-    // Retrofit - Deprecated plugins - No more required
-    // implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
-    // implementation "com.squareup.retrofit2:converter-scalars:$version_retrofit"
-
-    // Retrofit with Moshi Converter
-    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
-
-    // Coroutines - Deprecated - No more required
-    // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
-    // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"
-
-    // Retrofit Coroutines Support - Deprecated - No more required
-    // implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"
-
-    // Glide
-    implementation "com.github.bumptech.glide:glide:$version_glide"
-
-    // RecyclerView
-    implementation "androidx.recyclerview:recyclerview:$version_recyclerview"
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/fragment_sleep_detail.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/fragment_sleep_detail.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/fragment_sleep_detail.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,68 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-    <!-- Data to make available to the XML via data binding. In this case,
-         the whole ViewModel, so that we can access the LiveData,
-         click handlers, and state variables. -->
-    <data>
-        <variable
-            name="sleepDetailViewModel"
-            type="com.example.android.trackmysleepquality.sleepdetail.SleepDetailViewModel" />
-    </data>
-
-    <androidx.constraintlayout.widget.ConstraintLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        tools:context=".sleepdetail.SleepDetailFragment">
-
-        <ImageView
-            android:id="@+id/quality_image"
-            android:layout_width="@dimen/icon_size"
-            android:layout_height="@dimen/icon_size"
-            android:layout_marginStart="8dp"
-            android:layout_marginTop="56dp"
-            android:layout_marginEnd="8dp"
-            app:sleepImage="@{sleepDetailViewModel.night}"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toTopOf="parent" />
-
-        <TextView
-            android:id="@+id/quality_string"
-            android:layout_width="wrap_content"
-            android:layout_height="20dp"
-            android:layout_marginStart="8dp"
-            android:layout_marginTop="100dp"
-            android:layout_marginEnd="8dp"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@+id/quality_image"
-            app:sleepQualityString="@{sleepDetailViewModel.night}" />
-
-        <TextView
-            android:id="@+id/sleep_length"
-            android:layout_width="wrap_content"
-            android:layout_height="20dp"
-            android:layout_marginStart="8dp"
-            android:layout_marginTop="32dp"
-            android:layout_marginEnd="8dp"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@+id/quality_string"
-            app:sleepDurationFormatted="@{sleepDetailViewModel.night}" />
-
-        <Button
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginStart="8dp"
-            android:layout_marginEnd="8dp"
-            android:layout_marginBottom="32dp"
-            android:onClick="@{() -> sleepDetailViewModel.onClose()}"
-            android:text="@string/close"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent" />
-
-    </androidx.constraintlayout.widget.ConstraintLayout>
-</layout>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/Util.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/Util.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/Util.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,152 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality
-
-import android.annotation.SuppressLint
-import android.content.res.Resources
-import android.os.Build
-import android.text.Html
-import android.text.Spanned
-import android.widget.TextView
-import androidx.core.text.HtmlCompat
-import androidx.recyclerview.widget.RecyclerView
-import com.example.android.trackmysleepquality.database.SleepNight
-import java.text.SimpleDateFormat
-import java.util.*
-import java.util.concurrent.TimeUnit
-
-/**
- * These functions create a formatted string that can be set in a TextView.
- */
-private val ONE_MINUTE_MILLIS = TimeUnit.MILLISECONDS.convert(1, TimeUnit.MINUTES)
-private val ONE_HOUR_MILLIS = TimeUnit.MILLISECONDS.convert(1, TimeUnit.HOURS)
-
-/**
- * Convert a duration to a formatted string for display.
- *
- * Examples:
- *
- * 6 seconds on Wednesday
- * 2 minutes on Monday
- * 40 hours on Thursday
- *
- * @param startTimeMilli the start of the interval
- * @param endTimeMilli the end of the interval
- * @param res resources used to load formatted strings
- */
-fun convertDurationToFormatted(startTimeMilli: Long, endTimeMilli: Long, res: Resources): String {
-    val durationMilli = endTimeMilli - startTimeMilli
-    val weekdayString = SimpleDateFormat("EEEE", Locale.getDefault()).format(startTimeMilli)
-    return when {
-        durationMilli < ONE_MINUTE_MILLIS -> {
-            val seconds = TimeUnit.SECONDS.convert(durationMilli, TimeUnit.MILLISECONDS)
-            res.getString(R.string.seconds_length, seconds, weekdayString)
-        }
-        durationMilli < ONE_HOUR_MILLIS -> {
-            val minutes = TimeUnit.MINUTES.convert(durationMilli, TimeUnit.MILLISECONDS)
-            res.getString(R.string.minutes_length, minutes, weekdayString)
-        }
-        else -> {
-            val hours = TimeUnit.HOURS.convert(durationMilli, TimeUnit.MILLISECONDS)
-            res.getString(R.string.hours_length, hours, weekdayString)
-        }
-    }
-}
-
-/**
- * Returns a string representing the numeric quality rating.
- */
-fun convertNumericQualityToString(quality: Int, resources: Resources): String {
-    var qualityString = resources.getString(R.string.three_ok)
-    when (quality) {
-        -1 -> qualityString = "--"
-        0 -> qualityString = resources.getString(R.string.zero_very_bad)
-        1 -> qualityString = resources.getString(R.string.one_poor)
-        2 -> qualityString = resources.getString(R.string.two_soso)
-        4 -> qualityString = resources.getString(R.string.four_pretty_good)
-        5 -> qualityString = resources.getString(R.string.five_excellent)
-    }
-    return qualityString
-}
-
-
-/**
- * Take the Long milliseconds returned by the system and stored in Room,
- * and convert it to a nicely formatted string for display.
- *
- * EEEE - Display the long letter version of the weekday
- * MMM - Display the letter abbreviation of the nmotny
- * dd-yyyy - day in month and full year numerically
- * HH:mm - Hours and minutes in 24hr format
- */
-@SuppressLint("SimpleDateFormat")
-fun convertLongToDateString(systemTime: Long): String {
-    return SimpleDateFormat("EEEE MMM-dd-yyyy' Time: 'HH:mm")
-            .format(systemTime).toString()
-}
-
-/**
- * Takes a list of SleepNights and converts and formats it into one string for display.
- *
- * For display in a TextView, we have to supply one string, and styles are per TextView, not
- * applicable per word. So, we build a formatted string using HTML. This is handy, but we will
- * learn a better way of displaying this data in a future lesson.
- *
- * @param   nights - List of all SleepNights in the database.
- * @param   resources - Resources object for all the resources defined for our app.
- *
- * @return  Spanned - An interface for text that has formatting attached to it.
- *           See: https://developer.android.com/reference/android/text/Spanned
- */
-
-fun formatNights(nights: List<SleepNight>, resources: Resources): Spanned {
-    val sb = StringBuilder()
-    sb.apply {
-        append(resources.getString(R.string.title))
-        nights.forEach {
-            append("<br>")
-            append(resources.getString(R.string.start_time))
-            append("\t${convertLongToDateString(it.startTimeMilli)}<br>")
-            if (it.endTimeMilli != it.startTimeMilli) {
-                append(resources.getString(R.string.end_time))
-                append("\t${convertLongToDateString(it.endTimeMilli)}<br>")
-                append(resources.getString(R.string.quality))
-                append("\t${convertNumericQualityToString(it.sleepQuality, resources)}<br>")
-                append(resources.getString(R.string.hours_slept))
-                // Hours
-                append("\t ${it.endTimeMilli.minus(it.startTimeMilli) / 1000 / 60 / 60}:")
-                // Minutes
-                append("${it.endTimeMilli.minus(it.startTimeMilli) / 1000 / 60}:")
-                // Seconds
-                append("${it.endTimeMilli.minus(it.startTimeMilli) / 1000}<br><br>")
-            }
-        }
-    }
-    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
-        return Html.fromHtml(sb.toString(), Html.FROM_HTML_MODE_LEGACY)
-    } else {
-        return HtmlCompat.fromHtml(sb.toString(), HtmlCompat.FROM_HTML_MODE_LEGACY)
-    }
-}
-
-/**
- * ViewHolder that holds a single [TextView].
- *
- * A ViewHolder holds a view for the [RecyclerView] as well as providing additional information
- * to the RecyclerView such as where on the screen it was last drawn during scrolling.
- */
-class TextItemViewHolder(val textView: TextView): RecyclerView.ViewHolder(textView)
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher_sleep_tracker_round.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher_sleep_tracker_round.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher_sleep_tracker_round.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_sleep_tracker_background"/>
-    <foreground android:drawable="@drawable/ic_launcher_sleep_tracker_foreground"/>
-</adaptive-icon>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/overview/OverviewFragment.kt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/overview/OverviewFragment.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/overview/OverviewFragment.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,67 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.android.marsrealestate.overview
-
-import android.os.Bundle
-import android.view.*
-import androidx.fragment.app.Fragment
-import androidx.lifecycle.ViewModelProvider
-import com.example.android.marsrealestate.R
-import com.example.android.marsrealestate.databinding.FragmentOverviewBinding
-import com.example.android.marsrealestate.databinding.GridViewItemBinding
-
-/**
- * This fragment shows the the status of the Mars real-estate web services transaction.
- */
-class OverviewFragment : Fragment() {
-
-    /**
-     * Lazily initialize our [OverviewViewModel].
-     */
-    private val viewModel: OverviewViewModel by lazy {
-        ViewModelProvider(this).get(OverviewViewModel::class.java)
-    }
-
-    /**
-     * Inflates the layout with Data Binding, sets its lifecycle owner to the OverviewFragment
-     * to enable Data Binding to observe LiveData, and sets up the RecyclerView with an adapter.
-     */
-    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,
-                              savedInstanceState: Bundle?): View? {
-        // TODO (04) Switch to inflating FragmentOverviewBinding
-        val binding = GridViewItemBinding.inflate(inflater)
-
-        // Allows Data Binding to Observe LiveData with the lifecycle of this Fragment
-        binding.lifecycleOwner = this
-
-        // Giving the binding access to the OverviewViewModel
-        binding.viewModel = viewModel
-
-        // TODO (12) Set binding.photosGrid.adapter to a new PhotoGridAdapter()
-        setHasOptionsMenu(true)
-        return binding.root
-    }
-
-    /**
-     * Inflates the overflow menu that contains filtering options.
-     */
-    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {
-        inflater.inflate(R.menu.overflow_menu, menu)
-        super.onCreateOptionsMenu(menu, inflater)
-    }
-}
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/fragment_detail.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/fragment_detail.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/fragment_detail.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,68 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <ScrollView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        tools:context=".DetailFragment">
-
-        <androidx.constraintlayout.widget.ConstraintLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:padding="16dp">
-
-            <ImageView
-                android:id="@+id/main_photo_image"
-                android:layout_width="0dp"
-                android:layout_height="266dp"
-                android:scaleType="centerCrop"
-                app:layout_constraintEnd_toEndOf="parent"
-                app:layout_constraintStart_toStartOf="parent"
-                app:layout_constraintTop_toTopOf="parent"
-                tools:src="@tools:sample/backgrounds/scenic" />
-
-            <TextView
-                android:id="@+id/property_type_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="16dp"
-                android:textColor="#de000000"
-                android:textSize="39sp"
-                app:layout_constraintStart_toStartOf="parent"
-                app:layout_constraintTop_toBottomOf="@+id/main_photo_image"
-                tools:text="To Rent" />
-
-            <TextView
-                android:id="@+id/price_value_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="8dp"
-                android:textColor="#de000000"
-                android:textSize="20sp"
-                app:layout_constraintStart_toStartOf="parent"
-                app:layout_constraintTop_toBottomOf="@+id/property_type_text"
-                tools:text="$100,000" />
-
-        </androidx.constraintlayout.widget.ConstraintLayout>
-    </ScrollView>
-</layout>
\ No newline at end of file
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/database/SleepDatabase.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/database/SleepDatabase.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/database/SleepDatabase.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,104 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.database
-
-import android.content.Context
-import androidx.room.Database
-import androidx.room.Room
-import androidx.room.RoomDatabase
-
-/**
- * A database that stores SleepNight information.
- * And a global method to get access to the database.
- *
- * This pattern is pretty much the same for any database,
- * so you can reuse it.
- */
-@Database(entities = [SleepNight::class], version = 1, exportSchema = false)
-abstract class SleepDatabase : RoomDatabase() {
-
-    /**
-     * Connects the database to the DAO.
-     */
-    abstract val sleepDatabaseDao: SleepDatabaseDao
-
-    /**
-     * Define a companion object, this allows us to add functions on the SleepDatabase class.
-     *
-     * For example, clients can call `SleepDatabase.getInstance(context)` to instantiate
-     * a new SleepDatabase.
-     */
-    companion object {
-        /**
-         * INSTANCE will keep a reference to any database returned via getInstance.
-         *
-         * This will help us avoid repeatedly initializing the database, which is expensive.
-         *
-         *  The value of a volatile variable will never be cached, and all writes and
-         *  reads will be done to and from the main memory. It means that changes made by one
-         *  thread to shared data are visible to other threads.
-         */
-        @Volatile
-        private var INSTANCE: SleepDatabase? = null
-
-        /**
-         * Helper function to get the database.
-         *
-         * If a database has already been retrieved, the previous database will be returned.
-         * Otherwise, create a new database.
-         *
-         * This function is threadsafe, and callers should cache the result for multiple database
-         * calls to avoid overhead.
-         *
-         * This is an example of a simple Singleton pattern that takes another Singleton as an
-         * argument in Kotlin.
-         *
-         * To learn more about Singleton read the wikipedia article:
-         * https://en.wikipedia.org/wiki/Singleton_pattern
-         *
-         * @param context The application context Singleton, used to get access to the filesystem.
-         */
-        fun getInstance(context: Context): SleepDatabase {
-            // Multiple threads can ask for the database at the same time, ensure we only initialize
-            // it once by using synchronized. Only one thread may enter a synchronized block at a
-            // time.
-            synchronized(this) {
-                // Copy the current value of INSTANCE to a local variable so Kotlin can smart cast.
-                // Smart cast is only available to local variables.
-                var instance = INSTANCE
-                // If instance is `null` make a new database instance.
-                if (instance == null) {
-                    instance = Room.databaseBuilder(
-                            context.applicationContext,
-                            SleepDatabase::class.java,
-                            "sleep_history_database"
-                    )
-                            // Wipes and rebuilds instead of migrating if no Migration object.
-                            // Migration is not part of this lesson. You can learn more about
-                            // migration with Room in this blog post:
-                            // https://medium.com/androiddevelopers/understanding-migrations-with-room-f01e04b07929
-                            .fallbackToDestructiveMigration()
-                            .build()
-                    // Assign INSTANCE to the newly created database.
-                    INSTANCE = instance
-                }
-                // Return instance; smart cast to be non-null.
-                return instance
-            }
-        }
-    }
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/anim/slide_in_right.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/anim/slide_in_right.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/anim/slide_in_right.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<set xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <translate
-        android:duration="700"
-        android:fromXDelta="100%"
-        android:fromYDelta="0%"
-        android:toXDelta="0%"
-        android:toYDelta="0%" />
-</set>
\ No newline at end of file
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/grid_view_item.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/grid_view_item.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/grid_view_item.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools">
-    <data>
-        <!-- TODO (03) Switch from using viewModel to MarsProperty type -->
-        <variable
-            name="viewModel"
-            type="com.example.android.marsrealestate.overview.OverviewViewModel" />
-    </data>
-    <ImageView
-        android:id="@+id/mars_image"
-        android:layout_width="match_parent"
-        android:layout_height="170dp"
-        android:scaleType="centerCrop"
-        android:adjustViewBounds="true"
-        android:padding="2dp"
-        app:imageUrl="@{viewModel.property.imgSrcUrl}"
-        tools:src="@tools:sample/backgrounds/scenic"/>
-</layout>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/MainActivity.kt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/MainActivity.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/MainActivity.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,33 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.android.marsrealestate
-
-import android.os.Bundle
-import androidx.appcompat.app.AppCompatActivity
-
-class MainActivity : AppCompatActivity() {
-
-    /**
-     * Our MainActivity is only responsible for setting the content view that contains the
-     * Navigation Host.
-     */
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_main)
-    }
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/dimens.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/dimens.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/dimens.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <dimen name="margin">16dp</dimen>
-    <dimen name="icon_size">64dp</dimen>
-    <dimen name="title_text_size">20sp</dimen>
-    <dimen name="triple_margin">48dp</dimen>
-</resources>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/strings.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/strings.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/values/strings.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-
-    <!-- App title and fragment titles -->
-    <string name="app_name">Track My Sleep Quality</string>
-    <string name="sleep_tracker_fragment">SleepTrackerFragment</string>
-    <string name="sleep_quality_fragment">SleepQualityFragment</string>
-
-    <!-- Button labels -->
-    <string name="start">Start</string>
-    <string name="stop">Stop</string>
-    <string name="clear">Clear</string>
-
-    <!-- contentDescription strings for quality icons -->
-    <string name="quality_0">Sleep Quality 0</string>
-    <string name="quality_1">Sleep Quality 1</string>
-    <string name="quality_2">Sleep Quality 2</string>
-    <string name="quality_3">Sleep Quality 3</string>
-    <string name="quality_4">Sleep Quality 4</string>
-    <string name="quality_5">Sleep Quality 5</string>
-
-    <!-- Output to TextView styled with a little HTML -->
-    <string name="title"><![CDATA[<h3>HERE IS YOUR SLEEP DATA</h3>]]></string>
-    <string name="start_time"><![CDATA[<b>Start:</b>]]></string>
-    <string name="end_time"><![CDATA[<b>End:</b>]]></string>
-    <string name="quality"><![CDATA[<b>Quality:</b>]]></string>
-    <string name="hours_slept"><![CDATA[<b>Hours:Minutes:Seconds</b>]]></string>
-
-    <!-- Sleep quality strings -->
-    <string name="how_was_hour_sleep">How was your sleep?</string>
-    <string name="zero_very_bad">Very bad</string>
-    <string name="one_poor">Poor</string>
-    <string name="two_soso">So-so</string>
-    <string name="three_ok">OK</string>
-    <string name="four_pretty_good">Pretty good</string>
-    <string name="five_excellent">Excellent!</string>
-
-    <!-- Toast to play after Clear button has been pressed -->
-    <string name="cleared_message">All your data is gone forever.</string>
-    <string name="header_text">Sleep Results</string>
-    <string name="close">Close</string>
-    <string name="minutes_length">%d minutes on %s</string>
-    <string name="hours_length">%d hours on %s</string>
-    <string name="seconds_length">%d seconds on %s</string>
-</resources>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/text_item_view.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/text_item_view.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/text_item_view.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<TextView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:textSize="24sp"
-    android:paddingStart="16dp"
-    android:paddingEnd="16dp"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content" />
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/gradle.properties
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/gradle.properties	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/gradle.properties	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,16 +0,0 @@
-# Project-wide Gradle settings.
-# IDE (e.g. Android Studio) users:
-# Gradle settings configured through the IDE *will override*
-# any settings specified in this file.
-# For more details on how to configure your build environment visit
-# http://www.gradle.org/docs/current/userguide/build_environment.html
-# Specifies the JVM arguments used for the daemon process.
-# The setting is particularly useful for tweaking memory settings.
-org.gradle.jvmargs=-Xmx1536m
-# When configured, Gradle will run in incubating parallel mode.
-# This option should only be used with decoupled projects. More details, visit
-# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
-# org.gradle.parallel=true
-android.useAndroidX=true
-android.enableJetifier=true
-org.gradle.warning.mode=all
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_launcher_background.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_launcher_background.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/ic_launcher_background.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,62 +0,0 @@
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="108dp"
-    android:height="108dp"
-    android:viewportWidth="512"
-    android:viewportHeight="512">
-    <path
-        android:fillColor="#424242"
-        android:pathData="M0,0h512v512h-512z" />
-    <path
-        android:fillColor="#ef5350"
-        android:pathData="M138.98,245.08m-8.49,0a8.49,8.49 0,1 1,16.98 0a8.49,8.49 0,1 1,-16.98 0" />
-    <path
-        android:fillColor="#ef5350"
-        android:pathData="M31.95,300.55m-8.72,0a8.72,8.72 0,1 1,17.44 0a8.72,8.72 0,1 1,-17.44 0" />
-    <path
-        android:fillColor="#ef5350"
-        android:pathData="M412.74,282.7m-8.72,0a8.72,8.72 0,1 1,17.44 0a8.72,8.72 0,1 1,-17.44 0" />
-    <path
-        android:fillColor="#ff1744"
-        android:pathData="M360.91,248.48m-7.28,0a7.28,7.28 0,1 1,14.56 0a7.28,7.28 0,1 1,-14.56 0" />
-    <path
-        android:fillColor="#ff1744"
-        android:pathData="M471.68,268.13m-7.28,0a7.28,7.28 0,1 1,14.56 0a7.28,7.28 0,1 1,-14.56 0" />
-    <path
-        android:fillColor="#ff1744"
-        android:pathData="M99.16,282.7m-7.28,0a7.28,7.28 0,1 1,14.56 0a7.28,7.28 0,1 1,-14.56 0" />
-    <path
-        android:fillColor="#d50000"
-        android:pathData="M492.62,295.4m-5.15,0a5.15,5.15 0,1 1,10.3 0a5.15,5.15 0,1 1,-10.3 0" />
-    <path
-        android:fillColor="#d50000"
-        android:pathData="M456.31,305.7m-5.15,0a5.15,5.15 0,1 1,10.3 0a5.15,5.15 0,1 1,-10.3 0" />
-    <path
-        android:fillColor="#d50000"
-        android:pathData="M404.01,236.59m-5.15,0a5.15,5.15 0,1 1,10.3 0a5.15,5.15 0,1 1,-10.3 0" />
-    <path
-        android:fillColor="#d50000"
-        android:pathData="M58.31,253.57m-5.15,0a5.15,5.15 0,1 1,10.3 0a5.15,5.15 0,1 1,-10.3 0" />
-    <group>
-        <clip-path android:pathData="M0,-624.38h512v512h-512z M 0,0" />
-        <path
-            android:fillColor="#ff5252"
-            android:pathData="M256.0,73.3m-424.2,0.0a424.2,424.2,0,1,1,848.4,0.0a424.2,424.2,0,1,1,-848.4,0.0" />
-    </group>
-</vector>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/loading_animation.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/loading_animation.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/drawable/loading_animation.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<animated-rotate xmlns:android="http://schemas.android.com/apk/res/android"
-    android:drawable="@drawable/loading_img"
-    android:pivotX="50%"
-    android:pivotY="50%" />
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/build.gradle
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/build.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/build.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,84 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'com.android.application'
-apply plugin: 'kotlin-android'
-apply plugin: 'kotlin-android-extensions'
-apply plugin: 'kotlin-kapt'
-apply plugin: 'androidx.navigation.safeargs'
-
-android {
-    compileSdkVersion 30
-    defaultConfig {
-        applicationId "com.example.android.trackmysleepqualityrecyclerview"
-        minSdkVersion 19
-        targetSdkVersion 30
-        versionCode 1
-        versionName "1.0"
-        multiDexEnabled true
-        vectorDrawables.useSupportLibrary = true
-    }
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
-    }
-
-    // Enables data binding.
-    buildFeatures {
-        dataBinding true
-    }
-
-}
-
-dependencies {
-    implementation fileTree(dir: 'libs', include: ['*.jar'])
-    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"
-
-    // Support libraries
-    implementation "androidx.appcompat:appcompat:$version_appcompat"
-    implementation "androidx.fragment:fragment:$version_fragment"
-    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"
-
-    // Android KTX
-    implementation "androidx.core:core-ktx:$version_core"
-
-    // Room and Lifecycle dependencies
-    implementation "androidx.room:room-runtime:$version_room"
-    kapt "androidx.room:room-compiler:$version_room"
-    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"
-
-    // ViewModel and LiveData
-    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
-
-    // Kotlin Extensions and Coroutines support for Room
-    implementation "androidx.room:room-ktx:$version_room"
-
-    // Coroutines
-    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutine"
-    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutine"
-
-    // Navigation
-    implementation "android.arch.navigation:navigation-fragment-ktx:$version_navigation"
-    implementation "android.arch.navigation:navigation-ui-ktx:$version_navigation"
-
-    // Testing
-    testImplementation 'junit:junit:4.12'
-    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
-    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
-}
-
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_3.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_3.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_3.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,14 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="500"
-    android:viewportWidth="500" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#6ab343" android:pathData="M181.16,316.18m-181.7,0a181.7,181.7 0,1 1,363.4 0a181.7,181.7 0,1 1,-363.4 0"/>
-    <path android:fillColor="#eee" android:pathData="M398.31,101.69m-101.69,0a101.69,101.69 0,1 1,203.38 0a101.69,101.69 0,1 1,-203.38 0"/>
-    <path android:fillColor="#eee" android:pathData="M267.86,57.09m-24.76,0a24.76,24.76 0,1 1,49.52 0a24.76,24.76 0,1 1,-49.52 0"/>
-    <path android:fillColor="#eee" android:pathData="M224.93,85.36m-16.33,0a16.33,16.33 0,1 1,32.66 0a16.33,16.33 0,1 1,-32.66 0"/>
-    <path android:fillColor="#eee" android:pathData="M217.77,120.19m-9.17,0a9.17,9.17 0,1 1,18.34 0a9.17,9.17 0,1 1,-18.34 0"/>
-    <path android:fillColor="#6ab343" android:pathData="M377,147.58q-10,-6.89 -13.73,-20.1l18.6,-7.35q1.8,7.37 6.45,11.33a17.37,17.37 0,0 0,11.7 4,17 17,0 0,0 11.18,-3.9 12.88,12.88 0,0 0,-0.3 -20.17q-5,-3.83 -13.58,-3.83h-8.85V89.68h8.1a18.54,18.54 0,0 0,11.18 -3.3c3.05,-2.19 4.57,-5.4 4.57,-9.6a10.72,10.72 0,0 0,-3.75 -8.4,14 14,0 0,0 -9.6,-3.3 14.49,14.49 0,0 0,-9.9 3.3,17.57 17.57,0 0,0 -5.25,8.25l-17.85,-7.35a33.92,33.92 0,0 1,11.63 -15.6q8.47,-6.59 21.52,-6.6a39.56,39.56 0,0 1,17.18 3.6A28.64,28.64 0,0 1,428 60.51a24.51,24.51 0,0 1,4.2 14,25.17 25.17,0 0,1 -3.82,14.1 23.8,23.8 0,0 1,-9.23 8.55v1.2a27.18,27.18 0,0 1,12.15 9.45,26 26,0 0,1 4.65,15.6 28.87,28.87 0,0 1,-4.5 15.9,30.82 30.82,0 0,1 -12.67,11.1 41.9,41.9 0,0 1,-18.83 4A39.46,39.46 0,0 1,377 147.58Z"/>
-    <path android:fillColor="#fff" android:pathData="M79.71,267.04L144.93,267.04A5.49,5.49 0,0 1,150.42 272.53L150.42,272.58A5.49,5.49 0,0 1,144.93 278.07L79.71,278.07A5.49,5.49 0,0 1,74.22 272.58L74.22,272.53A5.49,5.49 0,0 1,79.71 267.04z"/>
-    <path android:fillColor="#fff" android:pathData="M217.39,267.04L282.61,267.04A5.49,5.49 0,0 1,288.1 272.53L288.1,272.58A5.49,5.49 0,0 1,282.61 278.07L217.39,278.07A5.49,5.49 0,0 1,211.9 272.58L211.9,272.53A5.49,5.49 0,0 1,217.39 267.04z"/>
-    <path android:fillColor="#00000000"
-        android:pathData="M268.86,377.57c-19.87,8.69 -54.93,14.52 -87.7,14.52 -33.08,0 -68.49,-5.94 -88.25,-14.77"
-        android:strokeColor="#fff" android:strokeLineCap="round" android:strokeWidth="20"/>
-</vector>
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepTrackerViewModel.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepTrackerViewModel.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleeptracker/SleepTrackerViewModel.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,255 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleeptracker
-
-import android.app.Application
-import androidx.lifecycle.AndroidViewModel
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.MutableLiveData
-import androidx.lifecycle.Transformations
-import com.example.android.trackmysleepquality.database.SleepDatabaseDao
-import com.example.android.trackmysleepquality.database.SleepNight
-import com.example.android.trackmysleepquality.formatNights
-import kotlinx.coroutines.*
-import androidx.lifecycle.viewModelScope
-
-/**
- * ViewModel for SleepTrackerFragment.
- */
-class SleepTrackerViewModel(
-        val database: SleepDatabaseDao,
-        application: Application) : AndroidViewModel(application) {
-
-    /**
-     * viewModelJob allows us to cancel all coroutines started by this ViewModel.
-
-    private var viewModelJob = Job()
-
-    /**
-     * A [CoroutineScope] keeps track of all coroutines started by this ViewModel.
-     *
-     * Because we pass it [viewModelJob], any coroutine started in this uiScope can be cancelled
-     * by calling `viewModelJob.cancel()`
-     *
-     * By default, all coroutines started in uiScope will launch in [Dispatchers.Main] which is
-     * the main thread on Android. This is a sensible default because most coroutines started by
-     * a [ViewModel] update the UI after performing some processing.
-     */
-    private val uiScope = CoroutineScope(Dispatchers.Main + viewModelJob)
-     */
-
-
-    private var tonight = MutableLiveData<SleepNight?>()
-
-    val nights = database.getAllNights()
-
-    /**
-     * Converted nights to Spanned for displaying.
-     */
-    val nightsString = Transformations.map(nights) { nights ->
-        formatNights(nights, application.resources)
-    }
-
-    /**
-     * If tonight has not been set, then the START button should be visible.
-     */
-    val startButtonVisible = Transformations.map(tonight) {
-        null == it
-    }
-
-    /**
-     * If tonight has been set, then the STOP button should be visible.
-     */
-    val stopButtonVisible = Transformations.map(tonight) {
-        null != it
-    }
-
-    /**
-     * If there are any nights in the database, show the CLEAR button.
-     */
-    val clearButtonVisible = Transformations.map(nights) {
-        it?.isNotEmpty()
-    }
-
-    /**
-     * Request a toast by setting this value to true.
-     *
-     * This is private because we don't want to expose setting this value to the Fragment.
-     */
-    private var _showSnackbarEvent = MutableLiveData<Boolean>()
-
-    /**
-     * If this is true, immediately `show()` a toast and call `doneShowingSnackbar()`.
-     */
-    val showSnackBarEvent: LiveData<Boolean>
-        get() = _showSnackbarEvent
-
-    /**
-     * Variable that tells the Fragment to navigate to a specific [SleepQualityFragment]
-     *
-     * This is private because we don't want to expose setting this value to the Fragment.
-     */
-
-    private val _navigateToSleepQuality = MutableLiveData<SleepNight>()
-    /**
-     * Call this immediately after calling `show()` on a toast.
-     *
-     * It will clear the toast request, so if the user rotates their phone it won't show a duplicate
-     * toast.
-     */
-
-    fun doneShowingSnackbar() {
-        _showSnackbarEvent.value = false
-    }
-
-    /**
-     * If this is non-null, immediately navigate to [SleepQualityFragment] and call [doneNavigating]
-     */
-    val navigateToSleepQuality: LiveData<SleepNight>
-        get() = _navigateToSleepQuality
-
-    /**
-     * Call this immediately after navigating to [SleepQualityFragment]
-     *
-     * It will clear the navigation request, so if the user rotates their phone it won't navigate
-     * twice.
-     */
-    fun doneNavigating() {
-        _navigateToSleepQuality.value = null
-    }
-
-    private val _navigateToSleepDataQuality = MutableLiveData<Long>()
-    val navigateToSleepDataQuality
-        get() = _navigateToSleepDataQuality
-
-    fun onSleepNightClicked(id: Long) {
-        _navigateToSleepDataQuality.value = id
-    }
-
-    fun onSleepDataQualityNavigated() {
-        _navigateToSleepDataQuality.value = null
-    }
-
-    init {
-        initializeTonight()
-    }
-
-    private fun initializeTonight() {
-        viewModelScope.launch {
-            tonight.value = getTonightFromDatabase()
-        }
-    }
-
-    /**
-     *  Handling the case of the stopped app or forgotten recording,
-     *  the start and end times will be the same.j
-     *
-     *  If the start time and end time are not the same, then we do not have an unfinished
-     *  recording.
-     */
-    private suspend fun getTonightFromDatabase(): SleepNight? {
-        //return withContext(Dispatchers.IO) {
-            var night = database.getTonight()
-            if (night?.endTimeMilli != night?.startTimeMilli) {
-                night = null
-            }
-            return night
-        //}
-    }
-
-    private suspend fun clear() {
-        withContext(Dispatchers.IO) {
-            database.clear()
-        }
-    }
-
-    private suspend fun update(night: SleepNight) {
-        withContext(Dispatchers.IO) {
-            database.update(night)
-        }
-    }
-
-    private suspend fun insert(night: SleepNight) {
-        withContext(Dispatchers.IO) {
-            database.insert(night)
-        }
-    }
-
-    /**
-     * Executes when the START button is clicked.
-     */
-    fun onStartTracking() {
-        viewModelScope.launch {
-            // Create a new night, which captures the current time,
-            // and insert it into the database.
-            val newNight = SleepNight()
-
-            insert(newNight)
-
-            tonight.value = getTonightFromDatabase()
-        }
-    }
-
-    /**
-     * Executes when the STOP button is clicked.
-     */
-    fun onStopTracking() {
-        viewModelScope.launch {
-            // In Kotlin, the return@label syntax is used for specifying which function among
-            // several nested ones this statement returns from.
-            // In this case, we are specifying to return from launch(),
-            // not the lambda.
-            val oldNight = tonight.value ?: return@launch
-
-            // Update the night in the database to add the end time.
-            oldNight.endTimeMilli = System.currentTimeMillis()
-
-            update(oldNight)
-
-            // Set state to navigate to the SleepQualityFragment.
-            _navigateToSleepQuality.value = oldNight
-        }
-    }
-
-    /**
-     * Executes when the CLEAR button is clicked.
-     */
-    fun onClear() {
-        viewModelScope.launch {
-            // Clear the database table.
-            clear()
-
-            // And clear tonight since it's no longer in the database
-            tonight.value = null
-        }
-
-        // Show a snackbar message, because it's friendly.
-        _showSnackbarEvent.value = true
-    }
-
-    /**
-     * Called when the ViewModel is dismantled.
-     * At this point, we want to cancel all coroutines;
-     * otherwise we end up with processes that have nowhere to return to
-     * using memory and resources.
-
-    override fun onCleared() {
-        super.onCleared()
-        viewModelJob.cancel()
-    }
-     */
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepdetail/SleepDetailViewModelFactory.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepdetail/SleepDetailViewModelFactory.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepdetail/SleepDetailViewModelFactory.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,40 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleepdetail
-
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.ViewModelProvider
-import com.example.android.trackmysleepquality.database.SleepDatabaseDao
-
-/**
- * This is pretty much boiler plate code for a ViewModel Factory.
- *
- * Provides the key for the night and the SleepDatabaseDao to the ViewModel.
- */
-class SleepDetailViewModelFactory(
-        private val sleepNightKey: Long,
-        private val dataSource: SleepDatabaseDao) : ViewModelProvider.Factory {
-    @Suppress("unchecked_cast")
-    override fun <T : ViewModel?> create(modelClass: Class<T>): T {
-        if (modelClass.isAssignableFrom(SleepDetailViewModel::class.java)) {
-            return SleepDetailViewModel(sleepNightKey, dataSource) as T
-        }
-        throw IllegalArgumentException("Unknown ViewModel class")
-    }
-}
-
- 
\ No newline at end of file
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/gradlew.bat
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/gradlew.bat	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/gradlew.bat	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,84 +0,0 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windows variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/activity_main.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/activity_main.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/layout/activity_main.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<!-- The merge tag can be used to eliminate redundant layouts when
-     including layouts, and it's a good idea to use it.
-     See: https://developer.android.com/training/improving-layouts/reusing-layouts -->
-
-<merge xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-
-    <fragment
-        android:id="@+id/nav_host_fragment"
-        android:name="androidx.navigation.fragment.NavHostFragment"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        app:defaultNavHost="true"
-        app:navGraph="@navigation/navigation" />
-
-</merge>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/network/MarsApiService.kt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/network/MarsApiService.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/java/com/example/android/marsrealestate/network/MarsApiService.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,65 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.android.marsrealestate.network
-
-// import com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory
-import com.squareup.moshi.Moshi
-import com.squareup.moshi.kotlin.reflect.KotlinJsonAdapterFactory
-import retrofit2.Retrofit
-import retrofit2.converter.moshi.MoshiConverterFactory
-import retrofit2.http.GET
-// import kotlinx.coroutines.Deferred
-
-private const val BASE_URL = "https://mars.udacity.com/"
-
-/**
- * Build the Moshi object that Retrofit will be using, making sure to add the Kotlin adapter for
- * full Kotlin compatibility.
- */
-private val moshi = Moshi.Builder()
-        .add(KotlinJsonAdapterFactory())
-        .build()
-
-/**
- * Use the Retrofit builder to build a retrofit object using a Moshi converter with our Moshi
- * object.
- */
-private val retrofit = Retrofit.Builder()
-        .addConverterFactory(MoshiConverterFactory.create(moshi))
-        .baseUrl(BASE_URL)
-        .build()
-
-/**
- * A public interface that exposes the [getProperties] method
- */
-interface MarsApiService {
-    /**
-
-     * The @GET annotation indicates that the "realestate" endpoint will be requested with the GET
-     * HTTP method
-     */
-    @GET("realestate")
-    suspend fun getProperties(): List<MarsProperty>
-}
-
-/**
- * A public Api object that exposes the lazy-initialized Retrofit service
- */
-object MarsApi {
-    val retrofitService : MarsApiService by lazy { retrofit.create(MarsApiService::class.java) }
-}
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/LICENSE.txt
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/LICENSE.txt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/LICENSE.txt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,613 +0,0 @@
-All image and audio files (including *.png, *.jpg, *.svg, *.mp3, *.wav
-and *.ogg) are licensed under the CC BY 4.0 license. All other files are
-licensed under the Apache 2 license.
-
-=======================================================================
-
-Apache License
---------------
-
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright {yyyy} {name of copyright owner}
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-All image and audio files (including *.png, *.jpg, *.svg, *.mp3, *.wav
-and *.ogg) are licensed under the CC BY 4.0 license. All other files are
-licensed under the Apache 2 license.
-
-CC-BY License
-----------------
-
-Attribution 4.0 International
-
-=======================================================================
-
-Creative Commons Corporation ("Creative Commons") is not a law firm and
-does not provide legal services or legal advice. Distribution of
-Creative Commons public licenses does not create a lawyer-client or
-other relationship. Creative Commons makes its licenses and related
-information available on an "as-is" basis. Creative Commons gives no
-warranties regarding its licenses, any material licensed under their
-terms and conditions, or any related information. Creative Commons
-disclaims all liability for damages resulting from their use to the
-fullest extent possible.
-
-Using Creative Commons Public Licenses
-
-Creative Commons public licenses provide a standard set of terms and
-conditions that creators and other rights holders may use to share
-original works of authorship and other material subject to copyright
-and certain other rights specified in the public license below. The
-following considerations are for informational purposes only, are not
-exhaustive, and do not form part of our licenses.
-
-     Considerations for licensors: Our public licenses are
-     intended for use by those authorized to give the public
-     permission to use material in ways otherwise restricted by
-     copyright and certain other rights. Our licenses are
-     irrevocable. Licensors should read and understand the terms
-     and conditions of the license they choose before applying it.
-     Licensors should also secure all rights necessary before
-     applying our licenses so that the public can reuse the
-     material as expected. Licensors should clearly mark any
-     material not subject to the license. This includes other CC-
-     licensed material, or material used under an exception or
-     limitation to copyright. More considerations for licensors:
-  wiki.creativecommons.org/Considerations_for_licensors
-
-     Considerations for the public: By using one of our public
-     licenses, a licensor grants the public permission to use the
-     licensed material under specified terms and conditions. If
-     the licensor's permission is not necessary for any reason--for
-     example, because of any applicable exception or limitation to
-     copyright--then that use is not regulated by the license. Our
-     licenses grant only permissions under copyright and certain
-     other rights that a licensor has authority to grant. Use of
-     the licensed material may still be restricted for other
-     reasons, including because others have copyright or other
-     rights in the material. A licensor may make special requests,
-     such as asking that all changes be marked or described.
-     Although not required by our licenses, you are encouraged to
-     respect those requests where reasonable. More_considerations
-     for the public:
-  wiki.creativecommons.org/Considerations_for_licensees
-
-=======================================================================
-
-Creative Commons Attribution 4.0 International Public License
-
-By exercising the Licensed Rights (defined below), You accept and agree
-to be bound by the terms and conditions of this Creative Commons
-Attribution 4.0 International Public License ("Public License"). To the
-extent this Public License may be interpreted as a contract, You are
-granted the Licensed Rights in consideration of Your acceptance of
-these terms and conditions, and the Licensor grants You such rights in
-consideration of benefits the Licensor receives from making the
-Licensed Material available under these terms and conditions.
-
-
-Section 1 -- Definitions.
-
-  a. Adapted Material means material subject to Copyright and Similar
-     Rights that is derived from or based upon the Licensed Material
-     and in which the Licensed Material is translated, altered,
-     arranged, transformed, or otherwise modified in a manner requiring
-     permission under the Copyright and Similar Rights held by the
-     Licensor. For purposes of this Public License, where the Licensed
-     Material is a musical work, performance, or sound recording,
-     Adapted Material is always produced where the Licensed Material is
-     synched in timed relation with a moving image.
-
-  b. Adapter's License means the license You apply to Your Copyright
-     and Similar Rights in Your contributions to Adapted Material in
-     accordance with the terms and conditions of this Public License.
-
-  c. Copyright and Similar Rights means copyright and/or similar rights
-     closely related to copyright including, without limitation,
-     performance, broadcast, sound recording, and Sui Generis Database
-     Rights, without regard to how the rights are labeled or
-     categorized. For purposes of this Public License, the rights
-     specified in Section 2(b)(1)-(2) are not Copyright and Similar
-     Rights.
-
-  d. Effective Technological Measures means those measures that, in the
-     absence of proper authority, may not be circumvented under laws
-     fulfilling obligations under Article 11 of the WIPO Copyright
-     Treaty adopted on December 20, 1996, and/or similar international
-     agreements.
-
-  e. Exceptions and Limitations means fair use, fair dealing, and/or
-     any other exception or limitation to Copyright and Similar Rights
-     that applies to Your use of the Licensed Material.
-
-  f. Licensed Material means the artistic or literary work, database,
-     or other material to which the Licensor applied this Public
-     License.
-
-  g. Licensed Rights means the rights granted to You subject to the
-     terms and conditions of this Public License, which are limited to
-     all Copyright and Similar Rights that apply to Your use of the
-     Licensed Material and that the Licensor has authority to license.
-
-  h. Licensor means the individual(s) or entity(ies) granting rights
-     under this Public License.
-
-  i. Share means to provide material to the public by any means or
-     process that requires permission under the Licensed Rights, such
-     as reproduction, public display, public performance, distribution,
-     dissemination, communication, or importation, and to make material
-     available to the public including in ways that members of the
-     public may access the material from a place and at a time
-     individually chosen by them.
-
-  j. Sui Generis Database Rights means rights other than copyright
-     resulting from Directive 96/9/EC of the European Parliament and of
-     the Council of 11 March 1996 on the legal protection of databases,
-     as amended and/or succeeded, as well as other essentially
-     equivalent rights anywhere in the world.
-
-  k. You means the individual or entity exercising the Licensed Rights
-     under this Public License. Your has a corresponding meaning.
-
-
-Section 2 -- Scope.
-
-  a. License grant.
-
-       1. Subject to the terms and conditions of this Public License,
-          the Licensor hereby grants You a worldwide, royalty-free,
-          non-sublicensable, non-exclusive, irrevocable license to
-          exercise the Licensed Rights in the Licensed Material to:
-
-            a. reproduce and Share the Licensed Material, in whole or
-               in part; and
-
-            b. produce, reproduce, and Share Adapted Material.
-
-       2. Exceptions and Limitations. For the avoidance of doubt, where
-          Exceptions and Limitations apply to Your use, this Public
-          License does not apply, and You do not need to comply with
-          its terms and conditions.
-
-       3. Term. The term of this Public License is specified in Section
-          6(a).
-
-       4. Media and formats; technical modifications allowed. The
-          Licensor authorizes You to exercise the Licensed Rights in
-          all media and formats whether now known or hereafter created,
-          and to make technical modifications necessary to do so. The
-          Licensor waives and/or agrees not to assert any right or
-          authority to forbid You from making technical modifications
-          necessary to exercise the Licensed Rights, including
-          technical modifications necessary to circumvent Effective
-          Technological Measures. For purposes of this Public License,
-          simply making modifications authorized by this Section 2(a)
-          (4) never produces Adapted Material.
-
-       5. Downstream recipients.
-
-            a. Offer from the Licensor -- Licensed Material. Every
-               recipient of the Licensed Material automatically
-               receives an offer from the Licensor to exercise the
-               Licensed Rights under the terms and conditions of this
-               Public License.
-
-            b. No downstream restrictions. You may not offer or impose
-               any additional or different terms or conditions on, or
-               apply any Effective Technological Measures to, the
-               Licensed Material if doing so restricts exercise of the
-               Licensed Rights by any recipient of the Licensed
-               Material.
-
-       6. No endorsement. Nothing in this Public License constitutes or
-          may be construed as permission to assert or imply that You
-          are, or that Your use of the Licensed Material is, connected
-          with, or sponsored, endorsed, or granted official status by,
-          the Licensor or others designated to receive attribution as
-          provided in Section 3(a)(1)(A)(i).
-
-  b. Other rights.
-
-       1. Moral rights, such as the right of integrity, are not
-          licensed under this Public License, nor are publicity,
-          privacy, and/or other similar personality rights; however, to
-          the extent possible, the Licensor waives and/or agrees not to
-          assert any such rights held by the Licensor to the limited
-          extent necessary to allow You to exercise the Licensed
-          Rights, but not otherwise.
-
-       2. Patent and trademark rights are not licensed under this
-          Public License.
-
-       3. To the extent possible, the Licensor waives any right to
-          collect royalties from You for the exercise of the Licensed
-          Rights, whether directly or through a collecting society
-          under any voluntary or waivable statutory or compulsory
-          licensing scheme. In all other cases the Licensor expressly
-          reserves any right to collect such royalties.
-
-
-Section 3 -- License Conditions.
-
-Your exercise of the Licensed Rights is expressly made subject to the
-following conditions.
-
-  a. Attribution.
-
-       1. If You Share the Licensed Material (including in modified
-          form), You must:
-
-            a. retain the following if it is supplied by the Licensor
-               with the Licensed Material:
-
-                 i. identification of the creator(s) of the Licensed
-                    Material and any others designated to receive
-                    attribution, in any reasonable manner requested by
-                    the Licensor (including by pseudonym if
-                    designated);
-
-                ii. a copyright notice;
-
-               iii. a notice that refers to this Public License;
-
-                iv. a notice that refers to the disclaimer of
-                    warranties;
-
-                 v. a URI or hyperlink to the Licensed Material to the
-                    extent reasonably practicable;
-
-            b. indicate if You modified the Licensed Material and
-               retain an indication of any previous modifications; and
-
-            c. indicate the Licensed Material is licensed under this
-               Public License, and include the text of, or the URI or
-               hyperlink to, this Public License.
-
-       2. You may satisfy the conditions in Section 3(a)(1) in any
-          reasonable manner based on the medium, means, and context in
-          which You Share the Licensed Material. For example, it may be
-          reasonable to satisfy the conditions by providing a URI or
-          hyperlink to a resource that includes the required
-          information.
-
-       3. If requested by the Licensor, You must remove any of the
-          information required by Section 3(a)(1)(A) to the extent
-          reasonably practicable.
-
-       4. If You Share Adapted Material You produce, the Adapter's
-          License You apply must not prevent recipients of the Adapted
-          Material from complying with this Public License.
-
-
-Section 4 -- Sui Generis Database Rights.
-
-Where the Licensed Rights include Sui Generis Database Rights that
-apply to Your use of the Licensed Material:
-
-  a. for the avoidance of doubt, Section 2(a)(1) grants You the right
-     to extract, reuse, reproduce, and Share all or a substantial
-     portion of the contents of the database;
-
-  b. if You include all or a substantial portion of the database
-     contents in a database in which You have Sui Generis Database
-     Rights, then the database in which You have Sui Generis Database
-     Rights (but not its individual contents) is Adapted Material; and
-
-  c. You must comply with the conditions in Section 3(a) if You Share
-     all or a substantial portion of the contents of the database.
-
-For the avoidance of doubt, this Section 4 supplements and does not
-replace Your obligations under this Public License where the Licensed
-Rights include other Copyright and Similar Rights.
-
-
-Section 5 -- Disclaimer of Warranties and Limitation of Liability.
-
-  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE
-     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS
-     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF
-     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,
-     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,
-     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR
-     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,
-     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT
-     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT
-     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.
-
-  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE
-     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,
-     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,
-     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,
-     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR
-     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN
-     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR
-     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR
-     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.
-
-  c. The disclaimer of warranties and limitation of liability provided
-     above shall be interpreted in a manner that, to the extent
-     possible, most closely approximates an absolute disclaimer and
-     waiver of all liability.
-
-
-Section 6 -- Term and Termination.
-
-  a. This Public License applies for the term of the Copyright and
-     Similar Rights licensed here. However, if You fail to comply with
-     this Public License, then Your rights under this Public License
-     terminate automatically.
-
-  b. Where Your right to use the Licensed Material has terminated under
-     Section 6(a), it reinstates:
-
-       1. automatically as of the date the violation is cured, provided
-          it is cured within 30 days of Your discovery of the
-          violation; or
-
-       2. upon express reinstatement by the Licensor.
-
-     For the avoidance of doubt, this Section 6(b) does not affect any
-     right the Licensor may have to seek remedies for Your violations
-     of this Public License.
-
-  c. For the avoidance of doubt, the Licensor may also offer the
-     Licensed Material under separate terms or conditions or stop
-     distributing the Licensed Material at any time; however, doing so
-     will not terminate this Public License.
-
-  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public
-     License.
-
-
-Section 7 -- Other Terms and Conditions.
-
-  a. The Licensor shall not be bound by any additional or different
-     terms or conditions communicated by You unless expressly agreed.
-
-  b. Any arrangements, understandings, or agreements regarding the
-     Licensed Material not stated herein are separate from and
-     independent of the terms and conditions of this Public License.
-
-
-Section 8 -- Interpretation.
-
-  a. For the avoidance of doubt, this Public License does not, and
-     shall not be interpreted to, reduce, limit, restrict, or impose
-     conditions on any use of the Licensed Material that could lawfully
-     be made without permission under this Public License.
-
-  b. To the extent possible, if any provision of this Public License is
-     deemed unenforceable, it shall be automatically reformed to the
-     minimum extent necessary to make it enforceable. If the provision
-     cannot be reformed, it shall be severed from this Public License
-     without affecting the enforceability of the remaining terms and
-     conditions.
-
-  c. No term or condition of this Public License will be waived and no
-     failure to comply consented to unless expressly agreed to by the
-     Licensor.
-
-  d. Nothing in this Public License constitutes or may be interpreted
-     as a limitation upon, or waiver of, any privileges and immunities
-     that apply to the Licensor or You, including from the legal
-     processes of any jurisdiction or authority.
-
-
-=======================================================================
-
-Creative Commons is not a party to its public
-licenses. Notwithstanding, Creative Commons may elect to apply one of
-its public licenses to material it publishes and in those instances
-will be considered the “Licensor.” The text of the Creative Commons
-public licenses is dedicated to the public domain under the CC0 Public
-Domain Dedication. Except for the limited purpose of indicating that
-material is shared under a Creative Commons public license or as
-otherwise permitted by the Creative Commons policies published at
-creativecommons.org/policies, Creative Commons does not authorize the
-use of the trademark "Creative Commons" or any other trademark or logo
-of Creative Commons without its prior written consent including,
-without limitation, in connection with any unauthorized modifications
-to any of its public licenses or any other arrangements,
-understandings, or agreements concerning use of licensed material. For
-the avoidance of doubt, this paragraph does not form part of the
-public licenses.
-
-Creative Commons may be contacted at creativecommons.org.
-
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepdetail/SleepDetailViewModel.kt
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepdetail/SleepDetailViewModel.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/java/com/example/android/trackmysleepquality/sleepdetail/SleepDetailViewModel.kt	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,85 +0,0 @@
-/*
- * Copyright 2018, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.android.trackmysleepquality.sleepdetail
-
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.MediatorLiveData
-import androidx.lifecycle.MutableLiveData
-import androidx.lifecycle.ViewModel
-import com.example.android.trackmysleepquality.database.SleepDatabaseDao
-import com.example.android.trackmysleepquality.database.SleepNight
-import kotlinx.coroutines.Job
-
-/**
- * ViewModel for SleepQualityFragment.
- *
- * @param sleepNightKey The key of the current night we are working on.
- */
-class SleepDetailViewModel(
-        private val sleepNightKey: Long = 0L,
-        dataSource: SleepDatabaseDao) : ViewModel() {
-
-    /**
-     * Hold a reference to SleepDatabase via its SleepDatabaseDao.
-     */
-    val database = dataSource
-
-
-    /**
-     */
-
-    private val night = MediatorLiveData<SleepNight>()
-
-    fun getNight() = night
-
-    init {
-        night.addSource(database.getNightWithId(sleepNightKey), night::setValue)
-    }
-
-    /**
-     * Variable that tells the fragment whether it should navigate to [SleepTrackerFragment].
-     *
-     * This is `private` because we don't want to expose the ability to set [MutableLiveData] to
-     * the [Fragment]
-     */
-    private val _navigateToSleepTracker = MutableLiveData<Boolean?>()
-
-    /**
-     * When true immediately navigate back to the [SleepTrackerFragment]
-     */
-    val navigateToSleepTracker: LiveData<Boolean?>
-        get() = _navigateToSleepTracker
-
-    /**
-     *
-     */
-
-
-    /**
-     * Call this immediately after navigating to [SleepTrackerFragment]
-     */
-    fun doneNavigating() {
-        _navigateToSleepTracker.value = null
-    }
-
-    fun onClose() {
-        _navigateToSleepTracker.value = true
-    }
-
-}
-
- 
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/navigation/navigation.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/navigation/navigation.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/navigation/navigation.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,72 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<!-- Note that the animations may show red in Android Studio;
-     however, they are present and working perfectly fine. -->
-
-<navigation xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/navigation"
-    app:startDestination="@id/sleep_tracker_fragment">
-
-    <fragment
-        android:id="@+id/sleep_tracker_fragment"
-        android:name="com.example.android.trackmysleepquality.sleeptracker.SleepTrackerFragment"
-        android:label="@string/sleep_tracker_fragment"
-        tools:layout="@layout/fragment_sleep_tracker">
-        <action
-            android:id="@+id/action_sleepTrackerFragment_to_sleepQualityFragment"
-            app:destination="@id/sleep_quality_fragment"
-            app:enterAnim="@anim/slide_in_right"
-            app:popEnterAnim="@anim/slide_in_right" />
-        <action
-            android:id="@+id/action_sleep_tracker_fragment_to_sleepDetailFragment"
-            app:destination="@id/sleep_detail_fragment"
-            app:enterAnim="@anim/slide_in_right"
-            app:popEnterAnim="@anim/slide_in_right" />
-    </fragment>
-    <fragment
-        android:id="@+id/sleep_quality_fragment"
-        android:name="com.example.android.trackmysleepquality.sleepquality.SleepQualityFragment"
-        android:label="@string/sleep_quality_fragment"
-        tools:layout="@layout/fragment_sleep_quality">
-        <argument
-            android:name="sleepNightKey"
-            app:argType="long" />
-        <action
-            android:id="@+id/action_sleepQualityFragment_to_sleepTrackerFragment"
-            app:destination="@id/sleep_tracker_fragment"
-            app:launchSingleTop="false"
-            app:popUpTo="@+id/sleep_tracker_fragment"
-            app:popUpToInclusive="true" />
-    </fragment>
-    <fragment
-        android:id="@+id/sleep_detail_fragment"
-        android:name="com.example.android.trackmysleepquality.sleepdetail.SleepDetailFragment"
-        android:label="fragment_sleep_detail"
-        tools:layout="@layout/fragment_sleep_detail" >
-        <argument
-            android:name="sleepNightKey"
-            app:argType="long" />
-        <action
-            android:id="@+id/action_sleepDetailFragment_to_sleep_tracker_fragment"
-            app:destination="@id/sleep_tracker_fragment"
-            app:launchSingleTop="false"
-            app:popUpTo="@+id/sleep_tracker_fragment"
-            app:popUpToInclusive="true" />
-    </fragment>
-</navigation>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/activity_main.xml
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/activity_main.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/app/src/main/res/layout/activity_main.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<fragment xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/nav_host_fragment"
-    android:name="androidx.navigation.fragment.NavHostFragment"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    app:defaultNavHost="true"
-    app:navGraph="@navigation/nav_graph" />
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright 2018, The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_sleep_tracker_background" />
-    <foreground android:drawable="@drawable/ic_launcher_sleep_tracker_foreground" />
-</adaptive-icon>
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/gradle.properties
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/gradle.properties	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/gradle.properties	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,36 +0,0 @@
-#
-# Copyright 2018, The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-#
-
-# Project-wide Gradle settings.
-
-# IDE (e.g. Android Studio) users:
-# Gradle settings configured through the IDE *will override*
-# any settings specified in this file.
-
-# For more details on how to configure your build environment visit
-# http://www.gradle.org/docs/current/userguide/build_environment.html
-
-# Specifies the JVM arguments used for the daemon process.
-# The setting is particularly useful for tweaking memory settings.
-android.enableJetifier=true
-android.useAndroidX=true
-org.gradle.jvmargs=-Xmx1536m
-
-# When configured, Gradle will run in incubating parallel mode.
-# This option should only be used with decoupled projects. More details, visit
-# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
-# org.gradle.parallel=true
Index: ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/build.gradle
===================================================================
--- ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/build.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-mars-real-estate-Step.05-Exercise-Displaying-a-Grid-of-Internet-Images/build.gradle	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,43 +0,0 @@
-// Top-level build file where you can add configuration options common to all sub-projects/modules.
-
-buildscript {
-    
-    ext {
-        // Versions for all the dependencies we plan to use. It's particularly useful for kotlin and
-        // navigation where the versions of the plugin needs to be the same as the version of the
-        // library defined in the app Gradle file
-        version_android_gradle_plugin = "4.0.1"
-        version_core = "1.3.1"
-        version_constraint_layout = "2.0.0-rc1"
-        version_glide = "4.8.0"
-        version_kotlin = "1.3.72"
-        version_kotlin_coroutines = "1.3.7"
-        version_lifecycle = "2.2.0"
-        version_moshi = "1.9.3"
-        version_navigation = "1.0.0"
-        version_retrofit = "2.9.0"
-        version_retrofit_coroutines_adapter = "0.9.2"
-        version_recyclerview = "1.2.0-alpha05"
-    }
-
-    repositories {
-        google()
-        jcenter()
-    }
-    dependencies {
-        classpath "com.android.tools.build:gradle:$version_android_gradle_plugin"
-        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
-        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:$version_navigation"
-    }
-}
-
-allprojects {
-    repositories {
-        google()
-        jcenter()
-    }
-}
-
-task clean(type: Delete) {
-    delete rootProject.buildDir
-}
Index: ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_4.xml
===================================================================
--- ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_4.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
+++ ../andfun-kotlin-sleep-tracker-with-recyclerview-Step.14-Solution-Add-Header-to-GridLayout/app/src/main/res/drawable/ic_sleep_4.xml	(revision 96d3427b282f71aa591396901a89d834ef0560d5)
@@ -1,14 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="500"
-    android:viewportWidth="500" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#6ab343" android:pathData="M181.16,316.18m-181.7,0a181.7,181.7 0,1 1,363.4 0a181.7,181.7 0,1 1,-363.4 0"/>
-    <path android:fillColor="#fff" android:pathData="M79.351,269.907L144.323,264.222A5.49,5.49 130,0 1,150.27 269.213L150.275,269.263A5.49,5.49 130,0 1,145.284 275.21L80.312,280.895A5.49,5.49 130,0 1,74.364 275.904L74.36,275.854A5.49,5.49 130,0 1,79.351 269.907z"/>
-    <path android:fillColor="#fff" android:pathData="M218.066,265.855L283.286,271.725A5.512,5.512 50.143,0 1,288.282 277.709L288.278,277.759A5.512,5.512 50.143,0 1,282.294 282.755L217.074,276.885A5.512,5.512 50.143,0 1,212.078 270.901L212.082,270.851A5.512,5.512 50.143,0 1,218.066 265.855z"/>
-    <path android:fillColor="#00000000"
-        android:pathData="M268.86,363.11c-19.87,26.3 -54.93,43.94 -87.7,43.94 -33.08,0 -68.49,-18 -88.25,-44.69"
-        android:strokeColor="#fff" android:strokeLineCap="round" android:strokeWidth="20"/>
-    <path android:fillColor="#eee" android:pathData="M398.31,101.69m-101.69,0a101.69,101.69 0,1 1,203.38 0a101.69,101.69 0,1 1,-203.38 0"/>
-    <path android:fillColor="#eee" android:pathData="M267.86,57.09m-24.76,0a24.76,24.76 0,1 1,49.52 0a24.76,24.76 0,1 1,-49.52 0"/>
-    <path android:fillColor="#eee" android:pathData="M224.93,85.36m-16.33,0a16.33,16.33 0,1 1,32.66 0a16.33,16.33 0,1 1,-32.66 0"/>
-    <path android:fillColor="#eee" android:pathData="M217.77,120.19m-9.17,0a9.17,9.17 0,1 1,18.34 0a9.17,9.17 0,1 1,-18.34 0"/>
-    <path android:fillColor="#6ab343" android:pathData="M402.17,133.18L354.92,133.18v-15.9l45.6,-67.8h21.3v65.4h12.75v18.3L421.82,133.18v18.9L402.17,152.08ZM402.17,114.88L402.17,78.73L401,78.73l-24.3,36.15Z"/>
-</vector>
